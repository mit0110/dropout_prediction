{"paragraphs":[{"text":"import java.io.File\nimport org.apache.spark.ml.feature.StringIndexer\nimport org.apache.spark.ml.feature.RegexTokenizer\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.types._\nimport org.apache.spark.sql.SaveMode\n\nimport org.json4s.jackson.Serialization\nimport org.json4s.DefaultFormats\nimplicit val formats = DefaultFormats","user":"anonymous","dateUpdated":"2018-11-14T15:02:17-0300","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":"","apps":[],"jobName":"paragraph_1513359722660_-942050832","id":"20171208-154552_893123027","dateCreated":"2017-12-15T14:42:02-0300","dateStarted":"2018-11-14T15:02:17-0300","dateFinished":"2018-11-14T15:02:18-0300","status":"ERROR","errorMessage":"org.apache.zeppelin.interpreter.InterpreterException: \n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start(RemoteInterpreterManagedProcess.java:143)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.reference(RemoteInterpreterProcess.java:73)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open(RemoteInterpreter.java:265)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getFormType(RemoteInterpreter.java:430)\n\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.getFormType(LazyOpenInterpreter.java:111)\n\tat org.apache.zeppelin.notebook.Paragraph.jobRun(Paragraph.java:387)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:175)\n\tat org.apache.zeppelin.scheduler.RemoteScheduler$JobRunner.run(RemoteScheduler.java:329)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:63"},{"text":"import org.apache.spark.sql.SparkSession\nval sparkSession = SparkSession.builder().master(\"local\").getOrCreate()","user":"anonymous","dateUpdated":"2018-01-19T10:01:27-0300","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.SparkSession\nsparkSession: org.apache.spark.sql.SparkSession = org.apache.spark.sql.SparkSession@6a5d1f6a\n"}]},"apps":[],"jobName":"paragraph_1515777133843_874448339","id":"20180112-141213_1977382732","dateCreated":"2018-01-12T14:12:13-0300","dateStarted":"2018-01-19T10:01:28-0300","dateFinished":"2018-01-19T10:01:41-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64"},{"text":"val BASE_DATA_DIRNAME = \"edm/data/KDDCup2015\"\nval LOG_FILENAME = new java.io.File(BASE_DATA_DIRNAME, \"clean/log_train.csv\").getPath\nval ENROLLEMENT_FILENAME = new java.io.File(BASE_DATA_DIRNAME, \"clean/enrollment_train.csv\").getPath\nval LABELS_FILENAME = new java.io.File(BASE_DATA_DIRNAME, \"truth_train.csv\").getPath","user":"anonymous","dateUpdated":"2018-01-19T10:01:29-0300","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"BASE_DATA_DIRNAME: String = edm/data/KDDCup2015\nLOG_FILENAME: String = edm/data/KDDCup2015/clean/log_train.csv\nENROLLEMENT_FILENAME: String = edm/data/KDDCup2015/clean/enrollment_train.csv\nLABELS_FILENAME: String = edm/data/KDDCup2015/truth_train.csv\n"}]},"apps":[],"jobName":"paragraph_1513359722661_-942435581","id":"20171208-154828_139612404","dateCreated":"2017-12-15T14:42:02-0300","dateStarted":"2018-01-19T10:01:42-0300","dateFinished":"2018-01-19T10:01:42-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:65"},{"text":"val csvLogsDF = sqlContext.read.format(\"csv\")\n  .option(\"header\", \"true\")\n  .option(\"inferSchema\", \"true\")\n  .load(LOG_FILENAME)\ncsvLogsDF.cache()\ncsvLogsDF.show(3)","user":"anonymous","dateUpdated":"2018-01-19T10:01:31-0300","config":{"colWidth":6,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"csvLogsDF: org.apache.spark.sql.DataFrame = [enrollment_id: int, time: timestamp ... 3 more fields]\nres1: csvLogsDF.type = [enrollment_id: int, time: timestamp ... 3 more fields]\n+-------------+--------------------+-------+--------+------+\n|enrollment_id|                time| source|   event|object|\n+-------------+--------------------+-------+--------+------+\n|       123765|2013-12-15 04:32:...|browser|  access|3971.0|\n|       123765|2013-12-15 04:32:...|browser|   video|3501.0|\n|       123765|2013-12-20 16:42:...| server|navigate|5772.0|\n+-------------+--------------------+-------+--------+------+\nonly showing top 3 rows\n\n"}]},"apps":[],"jobName":"paragraph_1513359763014_-2071026698","id":"20171215-144243_934790354","dateCreated":"2017-12-15T14:42:43-0300","dateStarted":"2018-01-19T10:01:42-0300","dateFinished":"2018-01-19T10:02:00-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:66"},{"text":"val labelsSchema = StructType(Array(\n    StructField(\"enrollment_id\", IntegerType, true),\n    StructField(\"dropout\", IntegerType, true)))\nval csvTruthTrain = sqlContext.read.format(\"csv\")\n  .option(\"header\", \"false\").schema(labelsSchema)\n  .load(LABELS_FILENAME)\nval csvEnrollmentsDF = sqlContext.read.format(\"csv\")\n  .option(\"header\", \"true\").option(\"inferSchema\", \"true\")\n  .load(ENROLLEMENT_FILENAME)\n  .join(csvTruthTrain, Seq(\"enrollment_id\"), \"left\")\n\ncsvEnrollmentsDF.cache()\ncsvEnrollmentsDF.show(3)","user":"anonymous","dateUpdated":"2018-01-19T10:01:33-0300","config":{"colWidth":6,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"labelsSchema: org.apache.spark.sql.types.StructType = StructType(StructField(enrollment_id,IntegerType,true), StructField(dropout,IntegerType,true))\ncsvTruthTrain: org.apache.spark.sql.DataFrame = [enrollment_id: int, dropout: int]\ncsvEnrollmentsDF: org.apache.spark.sql.DataFrame = [enrollment_id: int, username: string ... 2 more fields]\nres4: csvEnrollmentsDF.type = [enrollment_id: int, username: string ... 2 more fields]\n+-------------+--------------------+---------+-------+\n|enrollment_id|            username|course_id|dropout|\n+-------------+--------------------+---------+-------+\n|            1|9Uee7oEuuMmgPx2Iz...|      1.0|      0|\n|            3|1qXC7Fjbwp66GPQc6...|     23.0|      0|\n|            4|FIHlppZyoq8muPbdV...|      1.0|      0|\n+-------------+--------------------+---------+-------+\nonly showing top 3 rows\n\n"}]},"apps":[],"jobName":"paragraph_1513359845854_1190043682","id":"20171215-144405_1926937362","dateCreated":"2017-12-15T14:44:05-0300","dateStarted":"2018-01-19T10:01:43-0300","dateFinished":"2018-01-19T10:02:03-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:67"},{"text":"%md \n\n# Description of the courses","dateUpdated":"2017-12-15T14:42:02-0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Description of the courses</h1>\n</div>"}]},"apps":[],"jobName":"paragraph_1513359722670_-944359325","id":"20171208-193438_1653558343","dateCreated":"2017-12-15T14:42:02-0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:68"},{"title":"How many logs per course?","text":"z.show(csvLogsDF.join(csvEnrollmentsDF, Seq(\"enrollment_id\"), \"left\")\n    .groupBy(\"course_id\", \"event\").count().orderBy(\"course_id\"))","user":"anonymous","dateUpdated":"2018-01-12T10:32:03-0300","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{"stacked":true}},"commonSetting":{},"keys":[{"name":"course_id","index":0,"aggr":"sum"}],"groups":[{"name":"event","index":1,"aggr":"sum"}],"values":[{"name":"count","index":2,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"course_id\tevent\tcount\n0.0\tvideo\t58832\n0.0\twiki\t23299\n0.0\tdiscussion\t73998\n0.0\tpage_close\t96309\n0.0\tproblem\t63096\n0.0\tnavigate\t116538\n0.0\taccess\t220629\n1.0\tvideo\t71079\n1.0\tproblem\t99945\n1.0\tpage_close\t159773\n1.0\twiki\t6429\n1.0\taccess\t378772\n1.0\tdiscussion\t43808\n1.0\tnavigate\t118313\n2.0\taccess\t369782\n2.0\tdiscussion\t44057\n2.0\tproblem\t75936\n2.0\twiki\t7907\n2.0\tpage_close\t200058\n2.0\tnavigate\t123063\n2.0\tvideo\t86315\n3.0\tpage_close\t75501\n3.0\twiki\t11590\n3.0\tnavigate\t60997\n3.0\taccess\t159822\n3.0\tdiscussion\t36528\n3.0\tproblem\t67457\n3.0\tvideo\t46037\n4.0\twiki\t6403\n4.0\tdiscussion\t34352\n4.0\tvideo\t29063\n4.0\tnavigate\t55571\n4.0\tproblem\t29077\n4.0\tpage_close\t55945\n4.0\taccess\t124516\n5.0\twiki\t3191\n5.0\taccess\t133201\n5.0\tnavigate\t47365\n5.0\tpage_close\t48049\n5.0\tdiscussion\t31184\n5.0\tproblem\t61171\n5.0\tvideo\t22716\n6.0\taccess\t99521\n6.0\tproblem\t9976\n6.0\tdiscussion\t35947\n6.0\twiki\t1878\n6.0\tpage_close\t47758\n6.0\tnavigate\t35204\n6.0\tvideo\t31295\n7.0\tpage_close\t44127\n7.0\twiki\t4455\n7.0\tdiscussion\t58106\n7.0\tproblem\t121387\n7.0\tvideo\t47821\n7.0\tnavigate\t39287\n7.0\taccess\t187401\n8.0\tproblem\t78431\n8.0\tpage_close\t40112\n8.0\tdiscussion\t45179\n8.0\tvideo\t49916\n8.0\twiki\t1500\n8.0\taccess\t139385\n8.0\tnavigate\t44569\n9.0\tvideo\t22722\n9.0\tproblem\t42340\n9.0\tnavigate\t26554\n9.0\taccess\t109264\n9.0\tpage_close\t30613\n9.0\twiki\t1395\n9.0\tdiscussion\t17977\n10.0\taccess\t44840\n10.0\tnavigate\t17638\n10.0\tdiscussion\t13278\n10.0\tpage_close\t16747\n10.0\tproblem\t8561\n10.0\tvideo\t8499\n10.0\twiki\t934\n11.0\tdiscussion\t15036\n11.0\tpage_close\t26579\n11.0\taccess\t57425\n11.0\tnavigate\t19366\n11.0\tvideo\t13080\n11.0\tproblem\t15098\n11.0\twiki\t1455\n12.0\tvideo\t35004\n12.0\twiki\t1271\n12.0\taccess\t103427\n12.0\tproblem\t49782\n12.0\tdiscussion\t9126\n12.0\tnavigate\t22722\n12.0\tpage_close\t39437\n13.0\tproblem\t20557\n13.0\tnavigate\t27029\n13.0\twiki\t1530\n13.0\tdiscussion\t23216\n13.0\tpage_close\t54248\n13.0\taccess\t99058\n13.0\tvideo\t22045\n14.0\tproblem\t25889\n14.0\twiki\t1834\n14.0\tnavigate\t21871\n14.0\tpage_close\t23804\n14.0\taccess\t85992\n14.0\tdiscussion\t13014\n14.0\tvideo\t36348\n15.0\tproblem\t47092\n15.0\tpage_close\t16091\n15.0\twiki\t616\n15.0\taccess\t32209\n15.0\tnavigate\t15319\n15.0\tdiscussion\t7149\n15.0\tvideo\t9273\n16.0\tpage_close\t26255\n16.0\tvideo\t15739\n16.0\tnavigate\t18208\n16.0\tdiscussion\t9561\n16.0\taccess\t65279\n16.0\tproblem\t52418\n16.0\twiki\t1142\n17.0\twiki\t745\n17.0\tdiscussion\t9119\n17.0\tvideo\t8446\n17.0\tpage_close\t12131\n17.0\taccess\t26435\n17.0\tproblem\t5572\n17.0\tnavigate\t11594\n18.0\tproblem\t39147\n18.0\tnavigate\t19111\n18.0\twiki\t1610\n18.0\taccess\t89578\n18.0\tpage_close\t29275\n18.0\tdiscussion\t20675\n18.0\tvideo\t22437\n19.0\tpage_close\t22999\n19.0\taccess\t65300\n19.0\tproblem\t19445\n19.0\tvideo\t18927\n19.0\tnavigate\t16898\n19.0\tdiscussion\t10704\n19.0\twiki\t1306\n20.0\tdiscussion\t14465\n20.0\tproblem\t52474\n20.0\tnavigate\t16327\n20.0\tpage_close\t20860\n20.0\tvideo\t18043\n20.0\taccess\t72042\n20.0\twiki\t1078\n21.0\tdiscussion\t7971\n21.0\tpage_close\t17569\n21.0\tnavigate\t15293\n21.0\twiki\t945\n21.0\tvideo\t17317\n21.0\taccess\t58061\n21.0\tproblem\t39440\n22.0\tpage_close\t9039\n22.0\taccess\t22557\n22.0\tvideo\t4967\n22.0\tnavigate\t11644\n22.0\tproblem\t28483\n22.0\tdiscussion\t8236\n22.0\twiki\t650\n23.0\tvideo\t13363\n23.0\tpage_close\t17895\n23.0\twiki\t508\n23.0\tnavigate\t11850\n23.0\tproblem\t36259\n23.0\taccess\t57988\n23.0\tdiscussion\t10637\n24.0\tvideo\t11058\n24.0\tpage_close\t16926\n24.0\taccess\t33070\n24.0\tdiscussion\t5218\n24.0\twiki\t794\n24.0\tnavigate\t10488\n24.0\tproblem\t14381\n25.0\tpage_close\t2607\n25.0\tvideo\t2521\n25.0\twiki\t162\n25.0\tdiscussion\t1655\n25.0\tproblem\t881\n25.0\taccess\t8595\n25.0\tnavigate\t4795\n26.0\tnavigate\t6523\n26.0\tvideo\t6416\n26.0\tdiscussion\t4913\n26.0\tproblem\t482\n26.0\twiki\t335\n26.0\taccess\t16547\n26.0\tpage_close\t6334\n27.0\tproblem\t15641\n27.0\tnavigate\t8802\n27.0\tvideo\t10967\n27.0\twiki\t1009\n27.0\taccess\t36549\n27.0\tpage_close\t8975\n27.0\tdiscussion\t7887\n28.0\tpage_close\t6388\n28.0\tdiscussion\t4201\n28.0\tproblem\t1173\n28.0\twiki\t355\n28.0\taccess\t17857\n28.0\tnavigate\t6901\n28.0\tvideo\t5848\n29.0\taccess\t45980\n29.0\tnavigate\t10948\n29.0\twiki\t372\n29.0\tpage_close\t10861\n29.0\tproblem\t56542\n29.0\tdiscussion\t3953\n29.0\tvideo\t11366\n30.0\tproblem\t29976\n30.0\twiki\t644\n30.0\tnavigate\t8390\n30.0\taccess\t27234\n30.0\tdiscussion\t4158\n30.0\tvideo\t5297\n30.0\tpage_close\t9469\n31.0\tdiscussion\t3980\n31.0\tpage_close\t8942\n31.0\tvideo\t5099\n31.0\tnavigate\t6530\n31.0\tproblem\t3258\n31.0\twiki\t251\n31.0\taccess\t18543\n32.0\twiki\t414\n32.0\tnavigate\t5559\n32.0\tdiscussion\t2041\n32.0\taccess\t16935\n32.0\tpage_close\t4196\n32.0\tproblem\t7854\n32.0\tvideo\t6184\n33.0\tproblem\t24593\n33.0\tpage_close\t11353\n33.0\tdiscussion\t7821\n33.0\taccess\t27051\n33.0\twiki\t1412\n33.0\tvideo\t6352\n33.0\tnavigate\t8247\n34.0\tpage_close\t5861\n34.0\tvideo\t4991\n34.0\taccess\t16363\n34.0\tnavigate\t4625\n34.0\tproblem\t3751\n34.0\tdiscussion\t2485\n34.0\twiki\t280\n35.0\tvideo\t4049\n35.0\tnavigate\t3886\n35.0\taccess\t13937\n35.0\tproblem\t7527\n35.0\twiki\t169\n35.0\tpage_close\t3616\n35.0\tdiscussion\t1804\n36.0\tvideo\t2335\n36.0\tproblem\t1779\n36.0\tdiscussion\t2971\n36.0\tpage_close\t3791\n36.0\twiki\t334\n36.0\tnavigate\t4713\n36.0\taccess\t9056\n37.0\taccess\t9466\n37.0\twiki\t145\n37.0\tproblem\t1194\n37.0\tnavigate\t3460\n37.0\tpage_close\t3481\n37.0\tdiscussion\t1096\n37.0\tvideo\t2718\n38.0\tnavigate\t3111\n38.0\tpage_close\t3909\n38.0\taccess\t12524\n38.0\tproblem\t3105\n38.0\tvideo\t2473\n38.0\tdiscussion\t1753\n38.0\twiki\t160\n"}]},"apps":[],"jobName":"paragraph_1513359722671_-944744074","id":"20171208-233152_1803626595","dateCreated":"2017-12-15T14:42:02-0300","dateStarted":"2017-12-15T14:45:14-0300","dateFinished":"2017-12-15T14:45:34-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:69"},{"title":"Distribution of event types","text":"z.show(csvLogsDF.groupBy(\"event\").count())","user":"anonymous","dateUpdated":"2017-12-15T14:47:22-0300","config":{"editorSetting":{"language":"scala"},"colWidth":6,"editorMode":"ace/mode/scala","title":true,"results":{"0":{"graph":{"mode":"pieChart","height":333.949,"optionOpen":false},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"event\tcount\naccess\t3112191\nwiki\t90507\nnavigate\t1009309\ndiscussion\t649259\nproblem\t1261170\nvideo\t796958\npage_close\t1237883\n"}]},"apps":[],"jobName":"paragraph_1513359722671_-944744074","id":"20171208-233546_1941151355","dateCreated":"2017-12-15T14:42:02-0300","dateStarted":"2017-12-15T14:47:04-0300","dateFinished":"2017-12-15T14:47:05-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:70"},{"text":"val joinedLogsDF = csvLogsDF.join(csvEnrollmentsDF, Seq(\"enrollment_id\"), \"left\")","user":"anonymous","dateUpdated":"2018-01-19T10:01:38-0300","config":{"colWidth":6,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"joinedLogsDF: org.apache.spark.sql.DataFrame = [enrollment_id: int, time: timestamp ... 6 more fields]\n"}]},"apps":[],"jobName":"paragraph_1513359722674_-933586356","id":"20171208-191614_1165682638","dateCreated":"2017-12-15T14:42:02-0300","dateStarted":"2018-01-19T10:02:01-0300","dateFinished":"2018-01-19T10:02:03-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:71"},{"text":"z.show(joinedLogsDF.where(\"course_id = 1\").groupBy(\"object\", \"event\").count())","user":"anonymous","dateUpdated":"2018-01-12T14:19:01-0300","config":{"colWidth":6,"editorMode":"ace/mode/scala","results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{"stacked":true}},"commonSetting":{},"keys":[{"name":"object","index":0,"aggr":"sum"}],"groups":[{"name":"event","index":1,"aggr":"sum"}],"values":[{"name":"count","index":2,"aggr":"sum"}]},"helium":{}}},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"object\tevent\tcount\n3641.0\tproblem\t22555\n1329.0\taccess\t19939\n982.0\tproblem\t3781\n3744.0\taccess\t5212\n4838.0\taccess\t300\n1889.0\taccess\t8194\n4737.0\tproblem\t1408\n3110.0\tvideo\t182\n4814.0\taccess\t7324\n750.0\tvideo\t1948\n5749.0\tproblem\t1032\n5238.0\tvideo\t2220\n5216.0\taccess\t4053\n4032.0\tvideo\t7947\n5380.0\tproblem\t3799\n3198.0\tvideo\t123\n5551.0\taccess\t4770\n3768.0\tproblem\t4188\n3465.0\tvideo\t211\n4744.0\tproblem\t14270\n5829.0\tpage_close\t159773\n2484.0\tproblem\t333\n3389.0\taccess\t18538\n606.0\tvideo\t961\n1603.0\taccess\t9620\n2292.0\taccess\t234\n2225.0\taccess\t7402\n1539.0\taccess\t2878\n1429.0\taccess\t16755\n4877.0\taccess\t3471\n5747.0\tnavigate\t6981\n1409.0\taccess\t1\n1046.0\taccess\t16532\n3837.0\taccess\t1656\n3830.0\taccess\t6012\n291.0\tvideo\t1131\n263.0\tvideo\t2812\n3303.0\tvideo\t3064\n3288.0\taccess\t350\n1956.0\taccess\t17366\n5887.0\tnavigate\t20346\n4070.0\tvideo\t1335\n1420.0\taccess\t199\n5829.0\twiki\t6429\n3474.0\tvideo\t2988\n2329.0\tvideo\t2250\n2302.0\tproblem\t10217\n2156.0\taccess\t391\n2731.0\taccess\t17452\n569.0\tvideo\t4445\n3112.0\taccess\t9410\n4981.0\taccess\t5792\n2652.0\tproblem\t186\n5829.0\tproblem\t104\n1034.0\taccess\t8288\n5729.0\tproblem\t1030\n2336.0\tproblem\t4900\n1655.0\tproblem\t4032\n4348.0\taccess\t9595\n4898.0\tproblem\t9089\n3300.0\tproblem\t1704\n4201.0\tvideo\t251\n3382.0\taccess\t148\n2755.0\taccess\t2217\n4258.0\tvideo\t2608\n346.0\tvideo\t1130\n5828.0\tnavigate\t7207\n2026.0\taccess\t2843\n1544.0\tvideo\t3379\n3584.0\tvideo\t6549\n5171.0\taccess\t2\n1721.0\tproblem\t211\n3571.0\tproblem\t5391\n5149.0\taccess\t6899\n2362.0\tvideo\t905\n3857.0\tvideo\t4670\n4908.0\tvideo\t4349\n3757.0\taccess\t522\n843.0\tproblem\t1652\n1890.0\taccess\t6391\n3026.0\tproblem\t1531\n2353.0\taccess\t4799\n3407.0\tvideo\t3570\n1519.0\taccess\t7865\n1931.0\taccess\t10337\n2369.0\tvideo\t6473\n1633.0\taccess\t4414\n5046.0\taccess\t9927\n3041.0\taccess\t561\n2708.0\taccess\t786\n1015.0\tvideo\t3953\n2052.0\taccess\t6172\n5829.0\tdiscussion\t43808\n5817.0\tnavigate\t21221\n643.0\taccess\t634\n3782.0\taccess\t1372\n2982.0\taccess\t4259\n4382.0\taccess\t3957\n1403.0\taccess\t2166\n4238.0\taccess\t14443\n1237.0\taccess\t3803\n5772.0\tnavigate\t57465\n5888.0\tnavigate\t5093\n4946.0\taccess\t2\n5829.0\taccess\t50949\n2496.0\taccess\t1226\n1324.0\tvideo\t137\n3503.0\tvideo\t1488\n3386.0\taccess\t11614\n5613.0\taccess\t18730\n1945.0\tproblem\t8097\n408.0\tproblem\t255\n1211.0\tproblem\t180\n"}]},"apps":[],"jobName":"paragraph_1513359722672_-934355854","id":"20171209-000511_1612023458","dateCreated":"2017-12-15T14:42:02-0300","dateStarted":"2018-01-12T14:19:01-0300","dateFinished":"2018-01-12T14:19:02-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:72"},{"title":"Frequency of objects","text":"val (startValues, counts) = joinedLogsDF\n    .where(\"course_id = 1\").where(\"event != 'page_close'\")\n    .groupBy(\"object\").agg(count(\"*\").alias(\"frequency\"))\n    .select($\"frequency\".cast(\"double\")).map(value => value.getDouble(0)).rdd.histogram(50);\nz.show(sparkSession.createDataset(startValues.zip(counts)))","user":"anonymous","dateUpdated":"2018-01-12T15:59:08-0300","config":{"colWidth":6,"enabled":true,"results":{"1":{"graph":{"mode":"stackedAreaChart","height":300,"optionOpen":false,"setting":{"stackedAreaChart":{"style":"stack"}},"commonSetting":{},"keys":[{"name":"_1","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"_2","index":1,"aggr":"sum"}]},"helium":{}}},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true,"editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"startValues: Array[Double] = Array(1.0, 2026.78, 4052.56, 6078.34, 8104.12, 10129.9, 12155.68, 14181.46, 16207.24, 18233.02, 20258.8, 22284.58, 24310.36, 26336.14, 28361.92, 30387.7, 32413.48, 34439.26, 36465.04, 38490.82, 40516.6, 42542.38, 44568.16, 46593.94, 48619.72, 50645.5, 52671.28, 54697.06, 56722.84, 58748.62, 60774.4, 62800.18, 64825.96, 66851.74, 68877.52, 70903.3, 72929.08, 74954.86, 76980.64, 79006.42, 81032.2, 83057.98, 85083.76, 87109.54, 89135.32, 91161.1, 93186.88, 95212.66, 97238.44, 99264.22, 101290.0)\ncounts: Array[Long] = Array(39, 19, 15, 12, 7, 3, 0, 2, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1)\n"},{"type":"TABLE","data":"_1\t_2\n1.0\t39\n2026.78\t19\n4052.56\t15\n6078.34\t12\n8104.12\t7\n10129.9\t3\n12155.68\t0\n14181.46\t2\n16207.24\t4\n18233.02\t3\n20258.8\t2\n22284.58\t1\n24310.36\t0\n26336.14\t0\n28361.92\t0\n30387.7\t0\n32413.48\t0\n34439.26\t0\n36465.04\t0\n38490.82\t0\n40516.6\t0\n42542.38\t0\n44568.16\t0\n46593.94\t0\n48619.72\t0\n50645.5\t0\n52671.28\t0\n54697.06\t0\n56722.84\t1\n58748.62\t0\n60774.4\t0\n62800.18\t0\n64825.96\t0\n66851.74\t0\n68877.52\t0\n70903.3\t0\n72929.08\t0\n74954.86\t0\n76980.64\t0\n79006.42\t0\n81032.2\t0\n83057.98\t0\n85083.76\t0\n87109.54\t0\n89135.32\t0\n91161.1\t0\n93186.88\t0\n95212.66\t0\n97238.44\t0\n99264.22\t1\n"}]},"apps":[],"jobName":"paragraph_1515764035148_-1278619285","id":"20180112-103355_2119137357","dateCreated":"2018-01-12T10:33:55-0300","dateStarted":"2018-01-12T15:59:08-0300","dateFinished":"2018-01-12T15:59:10-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:73"},{"title":"Frequency of objects and events","text":"val (startValues, counts) = joinedLogsDF\n    .where(\"course_id = 1\").where(\"event != 'page_close'\")\n    .groupBy(\"object\", \"event\").agg(count(\"*\").alias(\"frequency\"))\n    .select($\"frequency\".cast(\"double\")).map(value => value.getDouble(0)).rdd.histogram(50);\nz.show(sparkSession.createDataset(startValues.zip(counts)))","user":"anonymous","dateUpdated":"2018-01-16T11:05:18-0300","config":{"colWidth":6,"enabled":true,"results":{"1":{"graph":{"mode":"stackedAreaChart","height":300,"optionOpen":false,"setting":{"stackedAreaChart":{"style":"stack"}},"commonSetting":{},"keys":[{"name":"_1","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"_2","index":1,"aggr":"sum"}]},"helium":{}}},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"startValues: Array[Double] = Array(1.0, 1150.28, 2299.56, 3448.84, 4598.12, 5747.4, 6896.68, 8045.96, 9195.24, 10344.52, 11493.8, 12643.08, 13792.36, 14941.64, 16090.92, 17240.2, 18389.48, 19538.76, 20688.04, 21837.32, 22986.6, 24135.88, 25285.16, 26434.44, 27583.72, 28733.0, 29882.28, 31031.56, 32180.84, 33330.12, 34479.4, 35628.68, 36777.96, 37927.24, 39076.52, 40225.8, 41375.08, 42524.36, 43673.64, 44822.92, 45972.2, 47121.48, 48270.76, 49420.04, 50569.32, 51718.6, 52867.88, 54017.16, 55166.44, 56315.72, 57465.0)\ncounts: Array[Long] = Array(30, 14, 7, 14, 7, 7, 7, 4, 6, 0, 1, 0, 2, 0, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)\n"},{"type":"TABLE","data":"_1\t_2\n1.0\t30\n1150.28\t14\n2299.56\t7\n3448.84\t14\n4598.12\t7\n5747.4\t7\n6896.68\t7\n8045.96\t4\n9195.24\t6\n10344.52\t0\n11493.8\t1\n12643.08\t0\n13792.36\t2\n14941.64\t0\n16090.92\t2\n17240.2\t2\n18389.48\t2\n19538.76\t2\n20688.04\t1\n21837.32\t1\n22986.6\t0\n24135.88\t0\n25285.16\t0\n26434.44\t0\n27583.72\t0\n28733.0\t0\n29882.28\t0\n31031.56\t0\n32180.84\t0\n33330.12\t0\n34479.4\t0\n35628.68\t0\n36777.96\t0\n37927.24\t0\n39076.52\t0\n40225.8\t0\n41375.08\t0\n42524.36\t0\n43673.64\t1\n44822.92\t0\n45972.2\t0\n47121.48\t0\n48270.76\t0\n49420.04\t0\n50569.32\t1\n51718.6\t0\n52867.88\t0\n54017.16\t0\n55166.44\t0\n56315.72\t1\n"}]},"apps":[],"jobName":"paragraph_1515776874012_-857674240","id":"20180112-140754_629935092","dateCreated":"2018-01-12T14:07:54-0300","dateStarted":"2018-01-12T15:39:40-0300","dateFinished":"2018-01-12T15:39:41-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:74"},{"text":"%md\n## Sequence lenghts","user":"anonymous","dateUpdated":"2018-01-12T14:03:21-0300","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Sequence lenghts</h2>\n</div>"}]},"apps":[],"jobName":"paragraph_1515776552183_-1954469116","id":"20180112-140232_1065670125","dateCreated":"2018-01-12T14:02:32-0300","dateStarted":"2018-01-12T14:03:21-0300","dateFinished":"2018-01-12T14:03:21-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:75"},{"text":"def getSequenceLenghts(courseId: Int) = {\n    joinedLogsDF\n        .where(joinedLogsDF(\"course_id\") === courseId).groupBy(\"enrollment_id\", \"dropout\").agg(count(\"*\").alias(\"sequenceLength\"))\n}\ndef histStringData(elements: Array[org.apache.spark.sql.Row]): String = {\n    Serialization.write(elements.map(\n        (row: org.apache.spark.sql.Row) => row(0)\n    ))\n}","user":"anonymous","dateUpdated":"2018-01-19T10:01:52-0300","config":{"colWidth":6,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":true},"editorMode":"ace/mode/scala","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"getSequenceLenghts: (courseId: Int)org.apache.spark.sql.DataFrame\nhistStringData: (elements: Array[org.apache.spark.sql.Row])String\n"}]},"apps":[],"jobName":"paragraph_1515783584221_-1531810750","id":"20180112-155944_1287250083","dateCreated":"2018-01-12T15:59:44-0300","dateStarted":"2018-01-19T10:02:03-0300","dateFinished":"2018-01-19T10:02:04-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:76"},{"text":"z.angularUnwatch(\"Run\") // unwatch so we don't get more the one call back registered\nvar course = 38\nvar positiveData = \"[]\"\nvar negativeData = \"[]\"\nvar sequences = getSequenceLenghts(course)\nvar maxItem = 0.0\nz.angularBind(\"Run\", 0)\nz.angularWatch(\"Run\", (before, after) => {\n    course = z.angular(\"course\") match {\n      case n: java.lang.String => n.asInstanceOf[String].toInt\n    }\n    sequences = getSequenceLenghts(course)\n    positiveData = histStringData(sequences.where(\"dropout == 0\").select(\"SequenceLength\").collect())\n    negativeData = histStringData(sequences.where(\"dropout == 1\").select(\"SequenceLength\").collect())\n    maxItem = sequences.agg(max(\"SequenceLength\")).collect()(0)(0).asInstanceOf[Long]\n})","user":"anonymous","dateUpdated":"2018-01-19T10:01:54-0300","config":{"colWidth":6,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","tableHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"course: Int = 38\npositiveData: String = []\nnegativeData: String = []\nsequences: org.apache.spark.sql.DataFrame = [enrollment_id: int, dropout: int ... 1 more field]\nmaxItem: Double = 0.0\n"}]},"apps":[],"jobName":"paragraph_1515786962008_-484867430","id":"20180112-165602_1353641032","dateCreated":"2018-01-12T16:56:02-0300","dateStarted":"2018-01-19T10:02:04-0300","dateFinished":"2018-01-19T10:02:07-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:77"},{"text":"z.angularBind(\"course\", 0)\nz.angularBind(\"data\", \"\")\nprint(s\"\"\"\n%angular \nCourse number: <input type=\"int\" ng-model=\"course\">\n<button class=\"btn btn-success\" ng-click=\"Run=Run+1; z.runParagraph('20180112-160846_1632990547'); z.runParagraph('20180112-142123_1917661365')\">Graphic</button>\n\"\"\")","user":"anonymous","dateUpdated":"2018-01-12T18:12:11-0300","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","editorHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\n"},{"type":"ANGULAR","data":"\nCourse number: <input type=\"int\" ng-model=\"course\">\n<button class=\"btn btn-success\" ng-click=\"Run=Run+1; z.runParagraph('20180112-160846_1632990547'); z.runParagraph('20180112-142123_1917661365')\">Graphic</button>\n"}]},"apps":[],"jobName":"paragraph_1515787973270_-1735210302","id":"20180112-171253_399400087","dateCreated":"2018-01-12T17:12:53-0300","dateStarted":"2018-01-12T18:04:58-0300","dateFinished":"2018-01-12T18:04:58-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:78"},{"text":"println(s\"\"\"%angular\n    <h3>Distribution of sequence lengths without Dropout</h3>\n    <svg id=\"chartSVG\" width=\"200\" height=\"100\" font-family=\"sans-serif\" font-size=\"10\" text-anchor=\"middle\"></svg>\n    <script type=\"text/javascript\" src=\"https://d3js.org/d3.v4.min.js\"></script>\n    <script type=\"text/javascript\">\n        // Draw the bubble chart\n        function drawChart() {\n            // set the dimensions and margins of the graph\n            var margin = {top: 20, right: 30, bottom: 30, left: 40},\n                width = 800 - margin.left - margin.right,\n                height = 300 - margin.top - margin.bottom;\n            \n            var nbins = 40;\n            \n            var data = ${positiveData};\n            // set the ranges\n            var x = d3.scaleLinear()\n                .domain([0, ${maxItem}])\n                .rangeRound([0, width]);\n            var y = d3.scaleLinear()\n                .range([height, 0]);\n            \n            // set the parameters for the histogram\n            var histogram = d3.histogram()\n                .domain(x.domain())\n                .thresholds(x.ticks(d3.timeMonth));\n            \n            // append the svg object to the body of the page\n            // append a 'group' element to 'svg'\n            // moves the 'group' element to the top left margin\n            var svg = d3.select(\"#chartSVG\")\n                .attr(\"width\", width + margin.left + margin.right)\n                .attr(\"height\", height + margin.top + margin.bottom)\n              .append(\"g\")\n                .attr(\"transform\", \n                      \"translate(\" + margin.left + \",\" + margin.top + \")\");\n            \n            // group the data for the bars\n            var bins = histogram\n                .domain(x.domain())\n                .thresholds(nbins)(data);\n\n            // Scale the range of the data in the y domain\n            y.domain([0, d3.max(bins, function(d) { return d.length; })]);\n            \n            // append the bar rectangles to the svg element\n            var bars = svg.selectAll(\"rect\")\n              .data(bins)\n              .enter()\n           \n            bars.append(\"rect\")\n              .attr(\"class\", \"bar\")\n              .attr(\"x\", 1)\n              .attr(\"transform\", function(d) {\n            \t  return \"translate(\" + x(d.x0) + \",\" + y(d.length) + \")\"; })\n              .attr(\"width\", function(d) { return x(d.x1) - x(d.x0) - 1; })\n              .attr(\"height\", function(d) { return height - y(d.length); })\n              .attr(\"fill\", \"steelblue\");\n             \n            bars.append(\"text\")\n                .attr(\"dy\", \".75em\")\n                .attr(\"y\", 6)\n                .attr(\"transform\", function(d) {\n            \t  return \"translate(\" + x(d.x0) + \",\" + (y(d.length) - 20) + \")\"; })\n                .attr(\"x\", (x(bins[0].x1) - x(bins[0].x0)) / 2)\n                .attr(\"text-anchor\", \"middle\")\n                .text(function(d) { return d.length != 0 ? d.length : ''; });\n            \n            // add the x Axis\n            svg.append(\"g\")\n              .attr(\"transform\", \"translate(0,\" + height + \")\")\n              .call(d3.axisBottom(x));\n            \n            // add the y Axis\n            svg.append(\"g\")\n              .call(d3.axisLeft(y));\n        }\n        if (d3 !== undefined) {\n            drawChart();\n        } else {\n            var sc = document.createElement('script');\n            sc.type = 'text/javascript';\n            sc.src = 'https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.16/d3.min.js';\n            sc.onload = drawChart;\n            sc.onerror = function(err) { alert(err); }\n            document.getElementsByTagName('head')[0].appendChild(sc);\n        }\n        \n    </script>\n    \"\"\")","user":"anonymous","dateUpdated":"2018-01-19T10:04:52-0300","config":{"colWidth":6,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","editorHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"    <h3>Distribution of sequence lengths without Dropout</h3>\n    <svg id=\"chartSVG\" width=\"200\" height=\"100\" font-family=\"sans-serif\" font-size=\"10\" text-anchor=\"middle\"></svg>\n    <script type=\"text/javascript\" src=\"https://d3js.org/d3.v4.min.js\"></script>\n    <script type=\"text/javascript\">\n        // Draw the bubble chart\n        function drawChart() {\n            // set the dimensions and margins of the graph\n            var margin = {top: 20, right: 30, bottom: 30, left: 40},\n                width = 800 - margin.left - margin.right,\n                height = 300 - margin.top - margin.bottom;\n            \n            var nbins = 40;\n            \n            var data = [404,130,120,226,80,104,228,352,79,271,42,86,771,23,111,59,137,206,14,189,65,100,105,120,272,498,133,181,213,285,440,261,198,270,216,49,46,158,102,293,283,624,160,126,402,140,14,13,281,10,325,494,378,282,252,88,43,334,377,57,513,266,284,302,146,214,59,204,316,75,5,38,301,8,292,311,93,334,132,314,53,422,183,198,8,1,21,302,81,468,400,299,370,255,424,67,46,13,63,256,449,306,146,332,85,330,231,291,2,237,284,343,143,216,282,208,167,109,175,88,115,13,355,140,272,467,148,18,205,224,176,218,111,209,433,326,34,44,173,144,138,30,240,284,38,54,131,770,37,368,78,9,115,120,55,62,31,479,185,100,285,27,196,390,127,20,182,131,254,273,219,297,121,210,990,179,243,224,88,108,208,265,34,426,148,260,279,213,206,281,26,163,67,167,67,342,275,182,211,356,33,174,195,1,179,340,256,201,133,107,41,45,132,13,183,34,372,41,55,309,2,385,323,142,157,236,123,255,186,334,555,230,155,247,62,273,12,301,690,368,330,259,187,2,210,257,229,193,206,54,31,35,215,94,212,168,338,46,100,60,85,127,406,154,187,159,111,73,102,284,33,79,169,185,136,375,77,283,2,163,558,42,211,135,6,8,167,201,112,250,143,334,127,118,137,135,16,177,262,148,5,336,155,135,187,200,811,136,160,317,99,50,321,135,57,373,110,315,22,9,815,149,260,162,84,394,71,154,418,132,163,187,9,29,10,320,59,137,189,110,209,284,205,120,170,87,6,296,160,289,200,270,53,229,176,77,104,73,382,227,406,544,113,169,177,63,321,36,69,266,108,21,151,227,269,306,189,2,296,127,131,147,247,195,289,53,105,126,60,439,94,318,178,180,17,183,131,102,57,141,131,366,6,138,323,287,265,240,248,75,149,18,46,153,123,192,293,49,248,52,323,398,111,154,216,210,354,297,154,9,2,106,113,74,98,184,297,89,333,604,41,43,288,358,90,122,83,393,139,548,376,34,208,245,207,337,182,147,162,138,74,147,2,106,70,132,463,188,1011,83,504,261,76,134,283,224,21,202,139,265,362,167,328,89,59,22,238,75,54,93,174,40,160,54,250,42,105,46,85,335,7,86,597,87,343,304,78,170,96,63,159,184,67,50,100,58,371,209,152,114,249,138,174,254,157,54,249,193,347,200,86,32,47,38,112,228,29,167,499,202,518,483,201,346,138,179,158,56,20,167,99,95,9,217,237,161,54,168,245,234,131,290,491,288,316,148,188,410,9,36,152,147,389,415,286,33,366,517,337,108,180,75,337,286,118,71,252,197,122,43,4,211,20,593,119,132,19,307,251,333,222,572,122,185,422,263,117,85,104,275,15,43,88,185,282,269,69,68,35,116,107,102,119,142,353,332,60,17,66,250,138,89,137,189,171,161,325,96,75,154,5,116,51,71,429,91,265,208,97,71,16,188,43,96,28,230,90,233,151,130,169,26,429,116,7,53,8,385,108,3739,48,491,135,548,4,163,297,264,174,138,53,134,111,238,311,255,148,223,199,234,232,87,347,137,88,336,148,427,220,33,109,356,59,126,160,14,430,113,72,156,1,50,43,23,349,183,5,147,196,287,170,248,228,126,175,156,175,367,326,399,387,369,216,211,170,188,137,388,99,16,294,28,99,575,518,205,182,187,10,127,208,60,105,206,340,238,177,207,259,12,53,74,384,305,291,32,195,292,329,342,164,88,488,73,119,534,245,292,325,8,33,69,28,150,302,236,82,101,62,415,128,37,7,193,8,326,243,333,196,357,84,209,228,161,94,163,196,126,151,153,26,87,149,479,237,94,275,373,412,110,150,399,124,138,309,134,174,6,37,49,240,20,231,48,97,99,472,237,120,126,27,98,45,219,49,54,166,433,272,199,132,166,147,383,320,229,73,78,51,125,151,240,1,10,1,32,119,262,218,64,264,144,105,256,1429,85,30,66,175,197,107,164,242,144,220,168,65,180,291,22,33,107,177,9,102,171,275,578,236,305,69,133,277,387,234,165,172,176,86,327,201,246,370,132,24,231,90,76,167,67,281,386,231,235,252,96,279,119,181,240,3,16,281,26,174,50,8,278,42,216,289,393,237,215,67,638,188,118,349,408,332,107,207,25,225,233,261,732,142,203,393,226,343,587,142,279,333,185,61,260,39,65,43,253,35,213,205,185,303,319,119,34,89,109,222,486,29,159,87,83,35,151,272,212,44,116,198,152,57,92,976,191,78,353,50,183,47,106,117,7,219,215,183,296,330,231,525,37,110,205,173,8,98,22,182,289,354,258,276,41,148,352,184,215,93,491,9,12,219,337,231,546,175,486,96,290,95,120,3,98,147,108,386,140,280,176,396,134,156,242,268,347,135,258,237,533,54,256,245,101,9,93,44,271,173,326,244,253,70,190,302,91,80,604,48,2,236,168,94,122,287,220,136,72,230,74,164,259,188,55,218,305,192,8,149,146,214,230,116,181,203,281,552,123,117,387,216,354,30,249,361,303,46,55,193,40,12,117,344,325,17,54,51,130,411,179,260,41,38,133,265,171,153,263,297,181,212,63,199,327,321,38,275,230,18,96,4,371,192,473,67,26,61,177,221,177,34,187,242,177,151,1,212,176,51,144,119,202,222,47,295,87,161,87,303,156,270,42,195,108,121,76,22,81,210,273,270,335,172,441,206,35,90,6,92,132,166,107,121,85,736,38,168,84,135,129,201,231,218,47,213,136,108,200,240,69,224,445,125,242,313,152,78,184,219,89,30,81,67,28,4,5,21,175,370,278,134,386,347,58,44,148,181,248,214,300,186,365,123,120,209,343,200,112,235,42,493,253,71,319,166,111,194,332,3,424,197,158,108,122,4,275,137,121,165,196,224,393,131,52,100,45,215,195,373,306,455,51,2,19,90,112,86,61,102,27,347,371,437,25,118,199,36,377,343,170,83,15,368,61,188,428,469,5,73,191,127,135,245,438,152,216,485,132,296,82,379,66,222,292,182,10,151,169,128,64,186,91,59,154,149,137,192,4,87,225,3,127,22,17,169,344,273,194,275,179,9,317,156,120,214,142,90,192,44,38,97,245,60,243,431,316,144,380,419,1,181,65,30,106,1,243,56,70,372,286,57,226,190,114,184,211,160,92,13,262,44,9,316,132,16,28,135,59,475,259,81,206,106,103,204,28,143,220,265,147,430,155,207,247,96,1,160,95,58,280,95,235,202,337,177,178,358,73,244,259,193,201,117,518,193,54,182,169,145,123,112,245,33,191,215,240,316,46,218,14,147,127,110,259,261,215,295,31,219,194,96,133,209,164,161,283,147,115,240,381,252,475,142,134,123,253,216,369,237,109,261,83,113,92,8,163,301,68,40,285,445,387,399,100,51,125,295,21,42,179,627,286,220,182,285,346,73,227,282,549,238,245,445,192,190,145,63,228,50,73,195,157,53,204,223,158,96,110,154,89,21,19,487,154,72,66,201,45,14,246,169,483,379,196,219,152,193,391,80,2,4,169,209,96,87,368,240,120,103,62,257,220,247,238,109,165,286,72,120,197,417,183,478,183,193,315,342,320,226,321,143,131,160,69,18,322,202,278,66,153,24,204,345,162,283,174,425,284,288,125,136,219,21,263,178,117,89,299,344,174,215,415,46,305,1,118,72,107,45,44,37,140,188,337,421,279,155,144,308,169,451,486,167,3,22,162,209,134,9,267,177,379,245,198,35,535,282,169,633,331,8,17,658,288,77,307,73,188,7,53,53,297,35,71,145,36,31,106,735,84,293,432,294,89,239,33,189,127,147,259,148,86,192,300,39,37,169,88,50,185,76,103,63,15,47,86,230,71,149,132,250,55,217,103,502,126,220,200,216,53,141,244,207,152,95,23,160,206,380,218,172,40,114,29,261,5,67,230,185,263,96,383,412,292,558,119,11,163,161,203,358,117,147,445,12,92,377,1,139,294,131,351,89,232,438,181,84,27,84,157,62,236,125,1,106,46,90,218,133,158,44,455,267,90,143,232,156,211,72,321,21,115,59,416,186,30,158,574,322,338,213,228,151,430,544,115,410,218,118,201,81,61,282,226,105,12,336,82,144,115,798,72,209,441,188,129,264,153,194,64,315,294,72,1,36,171,159,142,147,273,456,230,15,230,381,107,403,215,253,9,298,237,263,46,121,86,97,108,182,159,219,48,68,102,496,19,136,267,301,116,230,6,117,320,42,12,326,63,12,49,266,35,279,349,59,74,451,182,7,68,226,76,164,214,217,33,457,8,296,331,214,223,94,65,185,216,200,348,220,99,165,111,249,155,277,554,21,426,93,250,243,18,72,227,163,85,152,616,57,406,11,27,248,5,98,71,168,174,377,187,240,121,323,99,294,125,369,128,27,142,105,314,142,388,38,85,33,23,45,312,327,163,242,85,253,4,326,103,132,668,335,42,153,339,225,128,401,258,224,255,26,123,239,272,190,511,2,100,12,127,82,42,168,557,149,85,81,178,211,261,153,161,214,361,278,52,244,386,79,202,39,8,2,379,111,263,241,239,1043,418,30,364,393,382,73,345,179,141,8,98,516,318,289,1052,139,147,268,206,194,111,395,283,422,221,177,180,36,216,64,317,88,12,187,87,149,110,274,444,373,124,259,127,235,108,182,139,121,190,99,318,120,75,340,217,300,265,156,308,104,377,84,93,27,502,274,50,349,100,436,170,193,50,425,73,245,129,137,81,5,124,39,377,353,162,231,493,80,180,237,144,71,64,129,142,405,44,438,323,197,207,49,146,170,23,113,246,101,226,79,98,256,311,175,249,68,223,254,15,140,258,307,281,365,176,221,292,358,694,35,309,164,128,1,76,254,315,82,209,13,67,284,264,301,393,3,181,34,206,196,20,348,114,146,142,118,106,136,211,371,295,129,162,448,210,69,27,276,362,637,185,272,60,25,14,79,65,209,130,64,193,105,190,164,51,305,81,209,185,19,90,20,797,322,192,9,89,125,147,187,302,121,19,12,3,156,107,81,142,151,83,12,277,132,135,159,129,104,236,58,274,140,36,34,90,165,260,347,244,147,256,167,265,345,507,47,64,137,175,291,204,167,143,370,175,157,167,299,246,21,10,172,186,102,220,71,8,279,252,168,228,230,73,141,235,82,177,175,161,365,183,171,310,85,204,277,2,235,278,226,92,176,16,44,196,46,1,216,83,322,110,49,161,26,299,122,358,164,461,17,76,351,276,67,483,56,154,151,209,101,9,387,52,79,137,82,49,189,128,120,165,403,23,1,234,273,39,74,292,631,99,123,74,245,171,9,175,46,244,249,87,26,8,286,46,198,192,5,560,231,4,77,193,186,71,62,180,147,545,86,459,121,32,222,91,174,491,239,126,442,125,140,268,120,221,137,102,147,455,326,122,214,457,290,285,360,247,320,220,249,131,163,165,123,328,109,315,106,159,208,174,316,6,141,106,37,46,271,232,365,172,104,314,239,114,28,318,24,87,137,332,21,816,156,222,179,628,164,113,239,240,608,30,60,25,260,218,7,367,22,171,369,52,237,381,124,194,159,6,29,35,411,11,43,125,695,283,71,320,49,208,130,96,176,399,244,133,287,479,41,140,292,395,104,225,132,132,1,486,253,112,263,90,207,137,355,183,209,817,80,86,280,33,221,99,85,234,68,295,146,320,606,7,9,2,271,215,288,38,165,220,340,159,267,56,11,259,344,65,103,175,7,1,47,10,264,235,335,594,121,182,242,422,325,183,221,99,97,48,482,68,162,35,57,274,99,305,137,158,189,85,73,527,7,66,111,225,22,445,176,220,251,175,103,32,150,241,171,180,94,343,203,50,99,149,328,410,352,157,291,243,306,212,230,197,63,2,23,183,79,133,341,88,415,161,225,53,167,151,188,147,28,8,415,319,28,112,134,302,178,101,818,168,601,238,19,116,36,54,16,403,181,159,274,6,379,362,255,22,296,25,222,51,207,64,311,247,12,176,104,110,178,1,188,98,323,125,271,361,253,114,57,281,2,250,288,236,237,292,103,38,19,29,330,170,201,111,171,59,326,218,180,8,140,156,14,192,397,139,203,55,19,99,164,211,84,302,294,255,332,195,29,126,347,78,87,9,64,45,153,40,149,315,129,321,255,398,376,151,199,277,165,75,30,146,158,274,268,118,23,113,903,236,494,29,248,172,302,42,125,321,51,313,496,187,61,5,186,75,136,118,353,134,133,281,177,286,321,122,72,217,205,248,196,103,325,16,221,68,41,250,400,76,170,153,15,51,31,409,170,186,109,26,12,34,164,22,95,281,212,152,160,257,214,168,216,332,290,38,34,119,21,195,31,146,65,263,410,272,319,86,1,401,44,317,227,5,14,86,62,136,108,527,24,195,120,140,173,558,335,377,40,118,20,50,308,288,119,340,130,207,167,194,313,47,228,170,179,347,130,173,135,82,798,303,14,38,579,4,164,201,395,263,6,277,186,244,6,103,329,266,263,280,331,136,251,261,212,190,3,251,345,128,300,448,377,157,17,144,84,59,441,61,103,95,168,189,250,203,151,244,287,226,309,223,119,105,27,125,245,194,632,78,102,242,97,84,303,109,246,141,190,444,112,48,393,62,142,221,259,359,96,118,386,157,96,192,592,118,47,69,54,247,228,176,350,359,171,261,287,86,5,38,111,370,239,141,134,289,266,188,253,373,172,348,297,104,561,104,125,113,69,53,76,104,330,155,65,171,138,28,296,79,362,504,139,83,613,302,353,165,196,245,300,209,68,134,237,214,61,222,332,86,136,143,147,107,129,57,460,133,223,32,96,17,464,168,138,302,230,312,13,330,23,51,152,118,38,53,124,87,99,264,141,233,93,117,311,43,95,690,274,133,260,214,28,83,132,388,256,10,238,293,279,38,122,130,148,31,89,269,323,182,569,146,76,276,155,205,20,34,34,67,219,142,14,88,35,242,287,221,444,124,116,192,131,167,222,215,53,15,14,137,170,368,255,92,68,238,20,523,141,305,30,158,273,345,262,362,92,398,160,202,27,65,56,249,485,295,260,123];\n            // set the ranges\n            var x = d3.scaleLinear()\n                .domain([0, 3739.0])\n                .rangeRound([0, width]);\n            var y = d3.scaleLinear()\n                .range([height, 0]);\n            \n            // set the parameters for the histogram\n            var histogram = d3.histogram()\n                .domain(x.domain())\n                .thresholds(x.ticks(d3.timeMonth));\n            \n            // append the svg object to the body of the page\n            // append a 'group' element to 'svg'\n            // moves the 'group' element to the top left margin\n            var svg = d3.select(\"#chartSVG\")\n                .attr(\"width\", width + margin.left + margin.right)\n                .attr(\"height\", height + margin.top + margin.bottom)\n              .append(\"g\")\n                .attr(\"transform\", \n                      \"translate(\" + margin.left + \",\" + margin.top + \")\");\n            \n            // group the data for the bars\n            var bins = histogram\n                .domain(x.domain())\n                .thresholds(nbins)(data);\n\n            // Scale the range of the data in the y domain\n            y.domain([0, d3.max(bins, function(d) { return d.length; })]);\n            \n            // append the bar rectangles to the svg element\n            var bars = svg.selectAll(\"rect\")\n              .data(bins)\n              .enter()\n           \n            bars.append(\"rect\")\n              .attr(\"class\", \"bar\")\n              .attr(\"x\", 1)\n              .attr(\"transform\", function(d) {\n            \t  return \"translate(\" + x(d.x0) + \",\" + y(d.length) + \")\"; })\n              .attr(\"width\", function(d) { return x(d.x1) - x(d.x0) - 1; })\n              .attr(\"height\", function(d) { return height - y(d.length); })\n              .attr(\"fill\", \"steelblue\");\n             \n            bars.append(\"text\")\n                .attr(\"dy\", \".75em\")\n                .attr(\"y\", 6)\n                .attr(\"transform\", function(d) {\n            \t  return \"translate(\" + x(d.x0) + \",\" + (y(d.length) - 20) + \")\"; })\n                .attr(\"x\", (x(bins[0].x1) - x(bins[0].x0)) / 2)\n                .attr(\"text-anchor\", \"middle\")\n                .text(function(d) { return d.length != 0 ? d.length : ''; });\n            \n            // add the x Axis\n            svg.append(\"g\")\n              .attr(\"transform\", \"translate(0,\" + height + \")\")\n              .call(d3.axisBottom(x));\n            \n            // add the y Axis\n            svg.append(\"g\")\n              .call(d3.axisLeft(y));\n        }\n        if (d3 !== undefined) {\n            drawChart();\n        } else {\n            var sc = document.createElement('script');\n            sc.type = 'text/javascript';\n            sc.src = 'https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.16/d3.min.js';\n            sc.onload = drawChart;\n            sc.onerror = function(err) { alert(err); }\n            document.getElementsByTagName('head')[0].appendChild(sc);\n        }\n        \n    </script>\n    \n"}]},"apps":[],"jobName":"paragraph_1515784126617_-927369704","id":"20180112-160846_1632990547","dateCreated":"2018-01-12T16:08:46-0300","dateStarted":"2018-01-19T10:04:52-0300","dateFinished":"2018-01-19T10:04:52-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:79"},{"text":"println(s\"\"\"%angular\n    <h3>Distribution of sequence lengths wit Dropout</h3>\n    <svg id=\"negHistSVG\" width=\"200\" height=\"100\" font-family=\"sans-serif\" font-size=\"10\" text-anchor=\"middle\"></svg>\n    <script type=\"text/javascript\" src=\"https://d3js.org/d3.v4.min.js\"></script>\n    <script type=\"text/javascript\">\n        // Draw the bubble chart\n        function drawChart() {\n            // set the dimensions and margins of the graph\n            var margin = {top: 20, right: 30, bottom: 30, left: 40},\n                width = 800 - margin.left - margin.right,\n                height = 300 - margin.top - margin.bottom;\n            \n            var nbins = 40;\n            \n            var data = ${negativeData};\n            // set the ranges\n            var x = d3.scaleLinear()\n                .domain([0, ${maxItem}])\n                .rangeRound([0, width]);\n            var y = d3.scaleLinear()\n                .range([height, 0]);\n            \n            // set the parameters for the histogram\n            var histogram = d3.histogram()\n                .domain(x.domain())\n                .thresholds(x.ticks(d3.timeMonth));\n            \n            // append the svg object to the body of the page\n            // append a 'group' element to 'svg'\n            // moves the 'group' element to the top left margin\n            var svg = d3.select(\"#negHistSVG\")\n                .attr(\"width\", width + margin.left + margin.right)\n                .attr(\"height\", height + margin.top + margin.bottom)\n              .append(\"g\")\n                .attr(\"transform\", \n                      \"translate(\" + margin.left + \",\" + margin.top + \")\");\n            \n            // group the data for the bars\n            var bins = histogram\n                .domain(x.domain())\n                .thresholds(nbins)(data);\n\n            // Scale the range of the data in the y domain\n            y.domain([0, d3.max(bins, function(d) { return d.length; })]);\n            \n            // append the bar rectangles to the svg element\n            var bars = svg.selectAll(\"rect\")\n              .data(bins)\n              .enter()\n           \n            bars.append(\"rect\")\n              .attr(\"class\", \"bar\")\n              .attr(\"x\", 1)\n              .attr(\"transform\", function(d) {\n            \t  return \"translate(\" + x(d.x0) + \",\" + y(d.length) + \")\"; })\n              .attr(\"width\", function(d) { return x(d.x1) - x(d.x0) -1 ; })\n              .attr(\"height\", function(d) { return height - y(d.length); })\n              .attr(\"fill\", \"steelblue\");\n             \n            bars.append(\"text\")\n                .attr(\"dy\", \".75em\")\n                .attr(\"y\", 6)\n                .attr(\"transform\", function(d) {\n            \t  return \"translate(\" + x(d.x0) + \",\" + (y(d.length) - 20) + \")\"; })\n                .attr(\"x\", (x(bins[0].x1) - x(bins[0].x0)) / 2)\n                .attr(\"text-anchor\", \"middle\")\n                .text(function(d) { return d.length != 0 ? d.length : ''; });\n            \n            // add the x Axis\n            svg.append(\"g\")\n              .attr(\"transform\", \"translate(0,\" + height + \")\")\n              .call(d3.axisBottom(x));\n            \n            // add the y Axis\n            svg.append(\"g\")\n              .call(d3.axisLeft(y));\n        }\n        if (d3 !== undefined) {\n            drawChart();\n        } else {\n            var sc = document.createElement('script');\n            sc.type = 'text/javascript';\n            sc.src = 'https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.16/d3.min.js';\n            sc.onload = drawChart;\n            sc.onerror = function(err) { alert(err); }\n            document.getElementsByTagName('head')[0].appendChild(sc);\n        }\n        \n    </script>\n    \"\"\")","user":"anonymous","dateUpdated":"2018-01-19T10:04:52-0300","config":{"colWidth":6,"enabled":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false},"helium":{}},"1":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false},"helium":{}}},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","editorHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"    <h3>Distribution of sequence lengths wit Dropout</h3>\n    <svg id=\"negHistSVG\" width=\"200\" height=\"100\" font-family=\"sans-serif\" font-size=\"10\" text-anchor=\"middle\"></svg>\n    <script type=\"text/javascript\" src=\"https://d3js.org/d3.v4.min.js\"></script>\n    <script type=\"text/javascript\">\n        // Draw the bubble chart\n        function drawChart() {\n            // set the dimensions and margins of the graph\n            var margin = {top: 20, right: 30, bottom: 30, left: 40},\n                width = 800 - margin.left - margin.right,\n                height = 300 - margin.top - margin.bottom;\n            \n            var nbins = 40;\n            \n            var data = [151,170,42,9,5,17,8,1,104,34,25,2,38,14,156,27,8,9,4,3,170,112,1,141,3,3,7,42,3,9,1,41,16,2,1,7,115,1,92,1,63,23,29,157,123,3,46,6,73,34,34,1,20,28,44,69,14,27,7,1,76,1,7,3,4,1,23,2,10,21,33,5,1,6,44,153,157,48,11,163,8,23,164,106,24,1,1,2,8,14,5,40,56,52,37,111,187,21,227,4,8,5,1,30,17,8,4,2,2,5,1,9,4,13,2,17,1,22,31,2,1,82,66,135,78,30,49,71,14,7,38,15,8,260,103,6,13,81,6,56,53,5,27,83,5,8,7,1,18,20,30,43,43,17,191,16,34,28,6,13,1,37,5,41,38,2,8,6,23,26,2,1,38,55,46,11,127,176,8,28,68,1,3549,17,288,19,11,91,19,104,8,105,42,26,50,1,102,26,22,7,3,19,8,1,2,6,1,3,167,366,15,20,10,1,63,1,41,131,76,149,278,12,67,86,91,41,41,13,13,22,8,11,7,24,33,41,12,78,1,12,116,5,20,5,53,5,12,5,1,21,163,2,22,81,4,15,18,80,148,10,12,152,69,175,19,1,1,44,1,13,1,216,1,162,37,74,3,16,24,14,10,144,70,6,9,28,26,19,2,21,78,21,3,1,13,50,9,25,7,2,34,64,127,157,8,1,1,1,12,40,19,145,225,145,37,2,33,7,10,32,25,29,5,10,67,141,32,8,1,7,18,2,2,69,37,6,60,62,1,12,25,1,1,25,1,16,41,16,1,2,242,152,74,9,25,30,22,54,43,66,4,69,50,5,42,43,114,12,29,1,22,31,28,5,1,1,35,9,1,18,7,221,4,1,14,57,41,154,267,24,41,16,56,1,74,65,43,153,22,108,28,8,4,8,2,282,29,25,1,2,1,167,9,67,2,18,97,70,19,68,328,40,49,18,26,51,28,10,147,15,21,48,83,54,35,37,54,87,181,1,162,24,188,1,7,1,22,2,1,16,37,34,24,1,19,3,1,28,109,50,12,151,116,27,74,24,9,40,6,30,32,23,87,117,62,17,91,2,25,48,8,1,18,10,2,28,38,17,28,81,23,86,8,81,3,1,1,4,141,6,7,21,15,199,9,37,23,23,29,77,10,27,10,2,170,3,82,9,22,16,1,24,70,35,127,12,30,1,1,42,2,232,35,60,109,33,8,2,58,8,18,1,24,71,25,15,154,54,9,13,8,20,6,2,2,121,162,17,36,2,22,6,38,2,2,83,3,12,75,275,124,70,4,82,12,2,17,57,125,12,169,13,22,6,1,1,5,3,4,14,9,3,12,10,53,116,40,28,9,26,54,79,50,125,144,142,8,30,165,93,37,1,28,31,5,56,1,22,1,39,147,25,4,22,3,3,19,9,2,2,1,20,24,28,50,6,31,29,1,3,19,88,10,85,11,1,25,139,64,2,32,7,48,1,34,3,23,15,14,18,124,32,11,26,66,11,4,35,14,1,1,1,3,27,14,10,1,1,102,222,8,7,147,12,53,123,2,53,42,2,7,96,56,3,189,1,23,12,16,9,3,2,62,21,11,24,7,138,155,150,8,46,55,102,5,1,82,7,39,17,27,34,24,11,1,98,114,18,11,24,10,5,4,1,12,64,30,150,66,16,1,30,96,1,21,146,1,32,93,229,8,34,27,4,13,2,7,1,1,26,155,1,28,2,2,8,217,11,18,50,26,2,2,1,262,29,70,59,69,169,13,7,109,124,5,27,47,13,46,15,1,38,1,1,19,10,8,7,202,59,13,7,1,5,14,1,117,5,133,7,34,236,56,284,78,21,9,19,157,146,6,148,89,65,49,20,13,18,52,4,12,71,4,6,16,70,40,11,2,4,19,10,66,22,190,94,134,30,52,13,69,11,17,2,8,13,104,175,81,27,71,14,33,13,2,1,6,66,8,143,54,50,230,40,117,88,97,12,110,9,7,70,18,69,12,91,15,1,36,22,8,47,16,2,6,14,14,2,33,1,7,129,1,112,143,88,81,147,42,26,91,1,66,47,8,17,1,73,34,42,1,11,5,1,29,11,30,17,1,9,12,56,11,14,2,19,9,28,7,1,18,1,12,16,3,97,1,28,11,2,17,8,16,1,1,8,1,1,5,85,38,26,4,10,2,4,9,78,2,70,13,31,2,20,19,41,2,2,5,110,102,147,130,18,8,1,24,7,7,1,1,39,138,14,3,1,1,55,31,34,166,24,27,6,56,24,66,10,19,9,21,84,12,21,57,5,16,2,11,21,6,57,13,12,48,6,5,1,30,12,8,119,1,23,56,21,24,40,92,30,15,67,35,61,1,55,43,10,3,6,39,36,10,32,13,212,11,2,3,88,2,59,157,103,219,198,283,21,88,17,54,21,24,231,44,20,8,6,197,37,44,11,1,8,8,12,47,1,74,36,28,1,322,26,27,150,9,34,15,114,1,168,91,112,18,67,11,11,58,27,7,147,80,23,8,253,4,18,1,4,2,2,29,18,34,14,41,252,4,4,1,17,7,1,74,1,19,168,43,109,5,60,184,13,13,1,71,47,7,16,27,5,202,8,1,121,116,1,1,5,19,6,65,26,60,25,2,40,49,4,1,2,37,13,1,154,194,13,4,1,9,44,25,26,12,27,27,15,1,9,8,2,148,201,2,14,52,65,2,28,19,104,7,29,2,8,41,75,4,10,8,6,21,4,411,146,41,18,8,6,9,9,9,1,1,176,2,18,1,1,28,187,226,137,13,1,13,261,170,104,28,158,111,96,6,1,25,22,121,30,7,255,155,64,20,8,15,2,1,101,1,1,140,70,3,1,26,46,15,2,75,43,44,55,7,13,46,11,17,87,154,2,159,9,5,4,1,133,12,22,11,10,8,20,1,13,26,11,4,1,26,2,65,1,9,15,158,197,2,7,43,139,1,7,2,29,9,61,13,17,42,79,27,15,82,1,2,115,11,4,14,9,38,15,5,1,41,4,1,13,11,1,149,5,35,18,45,24,49,1,6,30,6,8,25,14,42,229,23,27,1,1,96,17,7,5,25,26,22,71,9,21,9,2,14,43,81,12,12,28,8,4,7,11,4,20,2,17,32,6,14,4,1,8,2,34,207,1,41,1,12,17,36,57,19,120,12,7,1,198,115,172,91,5,2,68,4,228,97,2,2,38,11,22,7,37,5,40,74,264,15,94,56,5,23,30,135,46,51,31,6,16,22,42,233,3,27,41,1,55,1,20,30,26,1,1,83,1,41,16,14,37,10,20,21,269,11,9,25,21,89,303,25,72,2,41,81,42,146,11,1,23,1,10,15,9,1,3,17,12,42,9,10,5,16,30,21,16,26,54,125,192,24,108,13,1,15,11,25,22,8,9,28,7,9,161,40,34,36,8,1,12,1,23,29,145,14,54,1,2,10,164,22,47,133,31,35,193,8,44,23,24,120,22,10,14,182,17,2,1,2,16,47,2,1,7,158,53,8,2,8,17,51,12,1,50,14,30,116,77,15,9,1,53,23,12,8,29,93,41,16,6,1,56,7,11,124,65,1,2,82,21,49,226,18,20,6,8,3,76,8,11,1,13,8,2,1,1,30,27,79,60,77,1,43,85,131,177,10,38,21,30,79,21,1,7,14,16,18,3,151,28,99,49,1,8,6,2,16,4,2,11,50,4,1,1,22,16,6,68,1,14,1,12,187,3,73,64,36,6,47,19,9,5,14,34,56,48,10,3,17,15,25,1,4,5,1,2,113,1,1,74,9,8,1,88,17,22,14,65,5,1,162,31,32,66,52,5,51,84,117,7,57,16,7,1,22,107,28,8,2,14,1,7,26,1,5,1,40,1,121,34,72,20,17,77,148,88,2,1,115,2,14,1,2,1,181,167,41,154,58,315,26,26,15,1,5,1,1,46,20,192,13,45,28,2,10,10,8,4,9,15,5,1,22,5,1,86,39,249,16,1,4,11,42,70,8,10,7,2,18,21,7,78,13,1,122,2,1,20,1,8,59,45,1,10,1,1,1,23,184,98,426,20,5,9,6,7,64,4,11,10,2,62,8,21,13,25,4,10,12,6,1,1,27,33,2,1,55,13,4,1,10,14,191,14,39,26,143,2,22,618,21,83,5,47,129,60,25,86,45,6,26,6,10,73,7,1,7,12,13,8,15,1,9,25,9,19,9,19,17,57,65,311,20,69,87,114,63,22,2,9,11,6,19,13,32,215,52,240,8,10,2,14,1,5,35,28,26,3,67,9,126,30,8,1,87,2,283,59,24,16,68,28,1,2,22,26,13,47,64,35,8,35,113,87,21,5,2,13,5,32,19,18,27,13,1,22,13,7,10,3,103,8,8,12,1,2,14,46,102,87,152,53,36,74,227,89,17,18,18,14,9,26,6,5,11,94,17,1,1,5,41,2,3,17,28,6,4,7,31,24,11,1,19,1,1,76,1,206,143,17,185,68,157,81,31,124,7,10,11,2,8,1,17,7,1,11,1,20,23,8,19,18,32,31,14,10,138,13,6,69,2,21,1,17,11,2,1,1,27,9,4,174,143,44,2,34,12,9,61,55,58,36,67,151,21,1,14,14,7,2,2,11,2,30,1,1,58,11,38,75,26,3,16,40,17,1,22,76,60,111,1,8,58,279,1,1,33,60,7,176,1,37,2,1,58,85,2,25,78,75,2,14,1,1,1,4,18,101,1,6,7,86,2,24,5,81,106,44,128,13,18,29,36,10,36,30,50,23,1,125,139,49,64,1,60,1,10,43,4,26,8,23,12,18,20,6,16,23,2,1,12,9,138,2,17,33,41,1,23,1,11,8,91,62,44,72,26,42,293,58,24,14,37,45,61,12,2,1,13,2,2,9,59,1,1,1,1,2,44,8,179,11,13,1,2,1,5,9,89,68,1,17,6,15,5,20,16,12,101,128,65,27,10,30,36,168,140,11,11,8,5,1,20,6,2,17,4,13,1,15,1,1,33,4,5,6,109,18,58,7,11,7,307,1,9,14,19,83,74,139,27,89,89,65,55,8,19,92,13,14,15,176,4,25,31,258,12,5,7,5,91,44,9,27,38,7,12,28,9,1,7,1,204,19,46,3,10,1,1,1,73,8,1,106,32,13,18,17,1,2,1,3,2,62,5,1,2,72,33,17,17,42,10,23,2,24,36,1,12,22,1,64,101,47,115,97,7,7,1,13,6,10,1,3,1,2,7,3,14,32,2,1,1,1,4,2,32,89,1,146,11,1,37,2,9,106,5,23,131,28,7,97,1,87,16,2,82,111,6,44,94,6,9,31,24,9,26,23,7,5,10,133,9,22,14,9,4,15,30,92,89,17,14,6,26,6,2,10,11,1,2,1,6,1,51,14,1,7,13,32,8,59,16,6,8,10,32,1,1,17,1,2,55,86,18,3,3,8,1,15,7,15,21,1,11,54,1,2,106,114,11,37,19,18,4,1,37,157,1,1,38,46,89,23,2,1,9,35,16,33,175,141,259,38,163,15,12,16,29,177,13,48,131,146,13,12,65,16,66,49,1,7,26,21,4,2,7,1,6,11,2,1,27,25,122,1,54,61,81,239,22,7,41,9,5,39,651,13,76,129,94,32,15,2,31,8,7,3,13,34,53,5,18,13,1,1,17,1,13,10,12,122,58,5,9,1,7,10,5,24,103,12,86,70,277,46,30,2,10,4,13,321,54,46,317,34,5,11,29,21,7,4,1,1,22,1,21,9,8,25,92,29,31,185,14,28,81,109,2,1,115,5,12,20,20,12,28,281,1,9,10,10,1,5,30,9,10,2,86,1,415,58,45,44,61,31,8,1,10,152,129,88,2,30,5,23,1,1,19,1,2,36,28,3,18,65,36,321,34,53,26,2,1,117,144,5,3,74,4,11,11,7,1,8,13,8,18,111,35,10,40,87,8,1,6,99,45,52,71,8,50,1,113,7,55,27,6,75,26,45,41,1,26,14,6,2,19,3,9,85,5,90,6,2,9,193,13,29,119,40,62,63,87,42,12,86,242,194,66,43,14,84,26,8,98,1,153,8,159,12,8,258,3,19,2,5,3,60,1,27,17,87,19,1,38,67,28,18,6,24,1,2,5,7,23,19,28,17,19,28,11,3,8,1,1,32,17,7,48,58,155,2,1,24,89,26,24,8,135,238,205,2,1,15,29,7,2,2,2,144,33,9,18,293,12,1,90,15,37,5,10,1,9,26,31,9,5,1,51,1,4,9,86,25,26,12,3,2,29,6,17,8,11,98,156,81,163,41,226,21,6,73,107,42,78,155,53,46,52,26,2,53,9,21,92,17,35,12,15,1,26,39,2,2,15,16,1,150,1,45,3,8,306,2,6,26,78,116,139,108,16,14,27,1,3,24,5,4,31,8,17,141,160,133,123,6,2,2,22,16,30,26,15,13,7,31,78,128,15,89,4,120,191,17,19,24,20,28,22,12,22,3,53,2,44,4,6,43,1,6,27,1,78,2,10,156,1,94,2,43,44,74,153,84,2,8,2,2,18,46,10,83,86,97,75,105,10,3,26,6,16,6,9,2,6,1,1,139,25,11,16,3,5,1,12,22,77,150,41,565,6,53,59,87,7,10,27,19,29,9,1,19,4,14,10,8,1,14,19,27,1,12,7,8,60,2,27,1,282,11,1,9,32,26,6,26,152,6,469,40,318,18,6,84,25,8,8,9,10,30,16,7,8,13,7,35,1,6,14,21,3,58,111,90,32,2,92,205,1,3,19,12,94,117,91,15,11,33,1,22,1,1,4,5,4,5,44,1,8,55,1,1,1,28,52,8,16,86,18,2,26,9,76,9,15,85,18,1,3,1,18,8,11,8,92,54,19,15,7,14,36,154,55,126,34,87,1,8,8,16,5,4,27,87,8,9,2,38,215,13,1,2,1,2,20,21,9,19,62,19,8,14,1,1,4,202,33,88,106,40,15,159,76,2,2,154,48,8,20,17,17,82,11,16,2,10,8,64,4,7,30,50,1,108,23,12,24,49,20,21,178,1,11,18,37,184,2,1,54,29,144,75,2,3,15,97,24,43,18,29,22,1,44,3,1,106,1,63,140,34,10,22,105,1,9,21,117,44,20,7,20,93,4,1,77,2,6,56,11,5,2,34,5,47,19,5,12,83,31,1,13,2,20,42,17,10,2,14,13,2,1,2,19,34,215,64,12,13,24,23,79,10,30,15,60,10,2,2,2,48,87,87,13,8,6,72,5,123,19,15,23,6,20,13,21,1,2,6,132,2,198,80,26,19,150,13,8,94,21,2,9,10,6,10,7,17,8,10,6,22,5,1,1,2,26,2,109,76,2,1,23,28,32,23,32,246,78,107,49,2,2,75,1,142,61,4,14,43,20,16,32,1,54,5,8,40,13,4,14,1,1,98,94,13,15,1,42,17,14,35,10,85,273,40,31,32,76,1,21,11,22,10,7,2,14,131,2,2,7,9,1,1,1,144,11,270,4,62,13,33,12,6,10,54,76,21,17,10,108,18,18,11,27,1,58,1,21,93,23,1,151,67,167,7,85,31,10,21,7,12,2,5,14,17,1,51,37,240,82,5,2,89,264,104,68,58,10,7,129,22,13,125,4,1,118,11,24,18,21,2,4,12,113,2,1,1,38,14,2,19,3,1,38,59,1,43,69,119,1,25,32,49,102,162,5,15,4,9,4,64,57,10,72,165,64,8,109,4,1,19,22,7,1,11,1,17,1,597,7,8,67,3,131,19,139,58,2,3,16,6,8,139,1,13,11,10,3,5,26,42,2,1,8,12,1,4,12,39,10,1,2,3,108,7,12,51,17,5,60,15,40,92,4,227,7,184,459,62,10,8,15,40,9,14,76,7,92,7,180,9,28,62,13,10,4,5,14,17,3,23,44,29,1,2,14,5,2,66,100,35,86,311,1,103,33,153,60,28,136,23,15,18,12,14,33,6,32,11,8,11,2,1,49,106,12,15,8,2,37,242,21,25,1,9,2,236,9,173,9,35,125,22,74,22,35,31,11,13,6,56,13,24,2,2,40,2,38,10,1,1,20,26,50,18,176,62,2,1,16,21,11,10,7,30,26,2,11,9,87,57,89,12,68,5,44,12,7,37,1,1,49,11,85,18,106,5,1,1,44,38,3,136,96,9,43,35,6,1,57,18,19,83,14,13,17,16,16,17,1,18,5,11,24,4,7,15,1,6,21,2,25,152,45,1,16,195,45,59,41,8,24,6,19,129,11,14,13,1,245,2,47,1,12,1,59,1,57,37,120,149,10,3,20,1,52,2,13,36,29,2,7,156,36,18,68,98,6,18,38,15,2,46,52,157,81,53,51,20,11,6,46,13,53,1,14,55,43,1,10,122,22,4,12,12,231,12,24,45,58,1,5,1,2,21,15,7,4,24,39,3,52,250,8,1,64,2,3,7,12,11,1,170,1,26,10,26,46,35,50,135,86,210,18,1,406,2,45,13,12,27,28,8,171,6,81,77,10,8,5,13,16,5,2,190,27,31,6,10,47,9,40,7,167,77,6,89,79,1,95,101,4,11,205,37,79,9,5,7,20,15,1,7,10,5,24,3,119,16,58,202,155,2,1,22,18,6,9,6,27,56,72,64,58,34,4,5,1,14,4,14,6,16,2,141,30,12,6,2,15,87,12,12,126,15,1,6,10,33,3,1,30,13,121,24,5,8,19,5,8,2,32,28,1,21,106,1,44,44,129,3,15,78,18,68,60,4,3,1,13,29,23,2,1,26,55,45,7,3,18,13,12,41,6,6,2,14,18,218,11,11,101,14,3,108,5,1,17,44,2,72,2,1,1,69,156,15,19,137,11,42,169,10,13,23,3,37,16,2,7,6,4,1,13,63,1,2,8,5,84,67,156,43,5,83,53,25,35,5,70,140,31,24,42,78,9,26,5,15,7,9,2,18,8,27,10,4,1,1,1,65,243,6,1,1,1,17,8,229,62,47,101,18,23,1,2,75,66,10,127,21,58,9,14,22,26,37,13,72,55,79,48,40,2,148,74,1,14,13,47,1,63,147,1,67,13,5,15,28,29,121,8,9,17,28,23,10,80,13,18,4,1,41,7,140,40,3,36,1,35,18,38,150,15,12,117,95,7,5,10,104,1,12,76,11,57,73,30,2,86,7,9,4,2,19,15,48,59,6,7,1,68,17,2,84,10,66,79,19,5,17,17,77,136,122,21,3,8,44,30,93,1,36,15,4,15,22,115,13,8,9,160,5,30,17,1,18,2,1,13,6,29,51,1,142,2,4,20,6,13,70,73,63,31,36,18,137,10,115,178,14,70,23,9,1,4,7,25,41,28,2,19,1,16,23,18,73,14,207,36,1,79,4,169,111,174,426,50,197,87,92,195,84,292,130,5,1,66,103,56,62,21,1,16,133,78,183,115,9,1,11,21,16,56,7,2,11,32,9,358,54,1,62,29,65,9,24,34,1,20,15,33,10,3,115,117,51,1,1,21,1,2,449,9,2,20,34,1,252,82,66,5,46,5,87,39,10,5,32,1,14,239,2,21,67,196,43,7,9,15,23,17,30,39,10,2,1,10,60,48,8,26,21,2,46,9,102,65,261,83,7,14,83,15,1,18,4,46,12,59,7,74,11,131,13,5,16,3,1,27,51,7,1,29,7,5,24,45,1,28,2,96,347,1,64,5,81,1,5,25,23,53,49,240,67,77,1,9,30,31,11,76,59,24,58,5,2,25,1,12,11,127,37,50,1,39,82,40,1,1,1,6,19,6,104,79,36,85,1,49,3,2,10,21,63,148,1,6,20,31,73,144,1,41,20,2,1,20,2,19,18,24,4,88,54,71,28,7,178,10,1,6,131,33,22,5,74,2,29,25,37,10,8,228,10,27,12,6,11,62,38,1,9,14,1,21,1,52,1,1,1,63,16,53,1,12,126,13,120,80,14,2,32,6,13,2,44,111,45,13,1,20,23,45,8,2,1,11,29,16,1,3,32,12,26,5,40,22,201,64,3,15,91,18,56,8,1,3,4,19,37,8,38,39,10,2,122,37,6,28,22,220,80,17,2,11,6,9,6,17,4,1,1,2,13,51,36,34,9,2,106,13,1,10,95,188,20,38,65,140,38,6,35,48,4,1,57,50,106,276,39,26,14,32,11,11,11,41,35,29,1,9,10,1,4,287,10,12,13,18,1,109,87,79,8,12,1,1,13,81,32,38,55,13,84,56,61,45,23,34,9,5,10,2,1,10,1,9,26,1,13,40,10,1,11,9,21,10,95,103,18,76,36,32,8,2,106,44,40,121,4,61,2,34,39,185,5,5,11,15,3,36,14,1,1,116,28,1,70,1,1,33,12,85,263,1,60,1,16,173,13,31,16,25,109,7,11,27,5,1,1,13,8,5,12,20,30,4,79,113,87,66,11,21,51,29,33,27,6,3,22,13,106,24,109,226,56,8,8,21,1,1,1,1,2,2,35,21,337,1,8,181,87,2,201,20,2,43,15,23,2,73,84,2,7,6,2,27,53,7,7,7,48,1,24,1,66,1,1,1,1,67,82,18,6,107,7,198,8,40,20,2,12,24,58,23,2,9,26,1,16,51,19,6,12,39,9,16,26,222,3,35,61,29,18,29,83,54,28,139,48,87,269,77,100,27,212,136,2,11,41,37,1,5,24,39,42,14,38,1,79,43,2,3,58,36,51,56,15,3,2,27,3,4,24,17,43,30,318,26,4,20,1,23,92,8,66,11,72,11,25,33,2,22,37,14,272,82,23,3,2,13,36,8,2,24,4,5,8,24,90,49,1,226,82,31,151,28,70,14,4,6,12,162,10,104,52,8,51,22,2,11,21,4,36,1,17,10,102,8,1,201,1,24,8,110,10,2,10,4,2,32,41,20,9,1,69,4,1,23,1,18,1,2,1,5,59,47,9,58,1,1,1,116,1,156,54,78,261,17,2,1,1,2,10,26,36,1,2,109,1,24,2,1,8,3,52,10,25,67,63,1,37,1,1,10,48,168,9,250,37,51,13,327,7,80,22,54,116,13,38,91,47,2,79,19,1,1,39,120,8,43,20,11,8,4,1,1,2,96,44,2,25,64,1,29,79,39,9,13,31,42,2,186,67,116,21,5,36,13,13,5,6,16,2,2,18,17,18,5,106,28,207,9,17,1,8,5,8,99,105,16,40,62,167,165,67,23,30,112,204,67,28,15,12,18,5,28,2,14,13,8,1,1,61,9,46,137,1,44,2,23,77,129,72,1,12,2,19,3,82,8,1,8,59,1,42,55,79,5,45,6,46,11,1,1,11,20,11,1,2,7,30,9,21,6,80,159,9,1,98,12,36,75,9,40,68,1,2,8,13,3,39,14,6,134,2,525,9,10,7,48,10,44,7,32,2,93,40,2,1,41,13,22,44,31,1,47,11,157,165,149,2,166,2,8,76,8,34,12,6,1,1,30,17,28,77,1,1,12,11,4,30,5,22,7,16,1,16,1,3,33,1,11,13,35,31,58,38,31,15,23,6,92,2,13,73,258,2,7,57,7,1,4,2,9,10,1,43,1,10,1,8,34,8,1,1,11,2,5,1,162,60,102,173,16,24,2,1,49,5,14,1,16,14,13,1,3,10,1,1,2,66,46,14,2,26,1,193,85,27,33,162,54,13,16,35,8,34,10,91,30,34,274,22,19,2,7,13,1,5,8,5,21,1,1,28,46,14,1,22,69,9,42,101,50,1,1,122,1,25,100,74,74,7,35,45,119,125,120,2,13,5,3,2,1,20,25,91,8,29,76,85,22,23,1,33,166,78,3,4,25,28,15,9,1,69,611,14,38,15,1,45,46,25,17,68,33,6,4,9,2,103,18,1,34,3,19,16,13,113,17,47,230,69,158,10,103,5,42,7,30,1,51,71,120,23,9,17,10,38,9,2,2,8,17,10,43,26,31,23,50,1,46,15,19,12,49,2,23,4,22,10,14,75,290,33,7,20,1,12,1,14,10,14,27,96,288,24,9,16,25,2,9,2,9,41,1,12,6,1,36,37,6,1,2,1,7,2,79,64,50,9,24,21,8,18,13,6,100,11,122,5,1,54,3,33,27,18,11,2,25,60,1,47,26,19,89,14,3,16,1,5,1,78,1,275,2,134,32,242,28,37,111,105,32,77,9,6,12,16,1,9,11,5,10,64,32,21,17,47,1,15,10,5,1,1,86,35,91,8,136,52,149,9,36,39,145,34,22,1,8,30,37,8,41,6,23,183,1,65,30,9,78,221,263,9,31,10,10,9,1,6,6,11,27,2,1,8,1,1,19,1,6,129,21,12,33,174,12,202,38,1,21,41,3,60,3,20,23,22,70,47,2,1,5,1,85,8,16,14,4,13,13,44,96,4,16,9,1,115,385,18,130,2,2,8,2,1,12,34,12,65,47,9,9,18,5,1,13,1,35,5,22,15,5,24,41,8,7,7,31,69,3,39,14,23,17,7,9,57,7,29,1,133,4,4,1,74,88,1,1,32,25,44,10,6,10,58,29,21,100,33,1,199,91,24,8,13,4,41,21,14,119,108,5,52,183,19,2,161,264,18,1,18,1,1,7,33,1,1,38,11,19,5,15,140,16,4,22,2,19,9,44,5,12,49,37,25,18,72,17,6,25,93,69,1,1,36,161,9,2,22,75,9,6,1,1,6,8,18,16,123,10,46,93,4,10,47,88,22,57,173,165,14,73,260,8,16,9,8,33,80,29,65,1,2,1,12,1,45,14,5,9,14,3,235,2,97,11,17,19,8,16,18,43,70,18,128,68,58,53,19,43,38,81,72,14,111,2,11,2,1,1,2,1,1,29,25,35,13,51,19,7,11,74,16,62,109,106,24,8,190,35,25,1,75,61,33,10,1,36,54,4,15,146,18,24,19,133,70,6,80,14,3,25,5,8,7,23,1,1,19,51,222,9,116,1,24,9,126,41,332,8,64,36,1,35,203,5,12,68,12,17,44,20,82,33,123,4,11,7,1,15,1,1,120,10,1,24,74,115,64,161,4,8,6,12,1,9,71,88,62,2,47,28,7,34,8,1,6,13,84,7,5,9,1,27,28,12,10,9,25,24,10,1,7,30,17,6,14,2,2,84,23,23,163,11,35,7,35,12,19,9,11,1,1,23,15,1,17,23,11,1,1,1,23,42,241,117,104,46,20,1,1,22,3,9,96,157,96,52,6,17,59,2,114,161,76,18,38,15,38,8,63,112,7,1,9,27,38,1,1,41,7,1,27,5,276,29,2,9,221,22,91,7,7,25,80,21,78,2,8,9,98,7,57,16,2,10,18,6,1,97,34,40,8,10,8,95,95,28,2,89,44,81,1,14,34,43,2,8,23,25,8,17,110,8,166,19,38,68,29,6,1,50,36,1,2,6,90,100,1,2,1,1,13,18,7,1,33,6,100,1,1,29,43,7,20,15,1,7,102,13,13,5,11,24,22,14,2,1,428,4,35,44,183,14,1,15,6,5,93,37,235,1,28,129,7,71,25,43,52,50,16,7,1,93,13,19,127,20,159,31,14,5,7,7,6,22,7,39,22,21,13,10,32,74,5,5,162,61,34,14,9,57,15,57,2,4,22,19,1,7,1,37,12,67,28,333,2,66,16,58,1,9,4,1,13,8,39,29,1,13,12,3,54,1,1,88,9,1,40,1,1,7,35,5,44,176,50,159,98,14,1,11,12,27,2,237,102,16,119,1,15,1,27,35,86,211,3,26,1,36,39,294,1,5,43,1,110,49,105,119,1,17,13,10,66,3,1,2,111,22,145,66,3,36,61,1,100,57,17,33,7,1,9,6,1,9,3,2,4,1,37,1,11,45,19,1,8,68,14,317,93,6,15,4,5,6,126,46,46,1,18,55,134,68,1,2,5,8,15,5,30,1,16,6,18,94,62,66,4,21,258,101,43,38,44,13,4,3,124,35,87,28,17,14,14,22,8,15,1,86,9,16,12,1,19,1,1,2,1,2,22,105,13,4,10,10,17,21,73,15,1,47,11,1,61,34,89,63,1,62,11,1,5,64,2,27,43,61,2,7,7,23,3,32,7,23,27,61,1,8,221,1,9,81,33,3,180,10,55,25,16,94,46,235,164,62,22,19,201,11,52,25,13,3,5,4,16,75,82,119,128,169,67,1,13,16,34,8,9,51,8,2,8,19,18,2,57,10,11,76,11,120,66,145,7,66,28,62,93,1,12,16,97,114,17,8,78,7,36,116,8,9,82,9,34,33,2,4,5,20,2,1,46,21,30,48,28,13,93,37,72,8,8,445,190,11,8,89,1,43,42,11,1,9,51,111,2,44,67,7,3,6,1,11,6,2,6,6,8,1,15,51,4,2,14,6,5,2,9,166,2,7,60,149,62,66,34,45,102,2,37,12,27,29,14,16,52,16,145,10,4,4,8,1,8,3,124,7,2,27,7,90,96,14,32,123,15,23,35,37,13,73,102,4,1,85,12,72,2,10,20,26,4,15,1,7,35,89,25,31,2,153,1,159,47,31,48,1,78,4,5,37,20,73,9,1,48,19,36,19,51,7,6,2,11,20,1,18,22,13,8,20,1,1,1,94,2,32,21,8,190,30,8,1,11,1,161,272,23,52,201,157,105,105,115,28,7,1,43,10,18,18,3,39,23,5,132,7,15,137,1,1,17,6,1,39,8,24,43,29,16,194,2,6,241,49,13,1,71,11,1,72,11,103,18,18,14,50,19,12,17,2,12,66,12,34,14,48,10,214,48,29,16,58,9,10,27,9,94,77,12,38,14,12,20,75,63,7,88,1,13,20,2,23,33,18,36,1,10,10,14,5,16,2,11,173,22,138,1,2,107,6,19,42,194,55,6,40,2,8,42,28,18,6,8,31,35,27,8,24,6,5,15,14,56,19,1,5,15,42,1,18,29,43,102,129,191,50,16,14,43,45,10,2,19,11,3,48,1,34,4,6,6,9,8,9,40,1,3,19,11,207,1,2,16,18,177,70,1,1,160,60,33,46,3,54,78,63,25,47,29,4,4,5,17,23,2,23,7,5,39,16,10,4,152,286,107,22,25,8,186,26,7,11,1,2,23,56,7,11,7,36,48,15,7,17,15,9,20,78,34,2,1,3,34,93,1,7,13,70,83,70,108,12,8,9,1,28,106,112,82,19,17,1,6,34,102,2,1,33,1,24,16,12,216,23,14,6,86,1,49,114,7,57,4,1,13,1,2,31,1,36,17,8,13,12,15,5,45,20,40,1,20,14,82,1,56,59,216,165,33,16,27,25,33,4,14,45,15,30,18,23,19,29,14,22,9,9,1,7,6,162,76,31,14,7,13,25,2,47,6,77,25,18,115,15,112,1,37,3,56,1,33,180,188,4,19,52,4,11,53,1,2,87,7,7,8,7,17,67,220,390,96,97,9,141,1,28,8,10,2,16,18,19,5,71,2,94,1,159,30,12,20,26,9,164,52,28,58,361,8,299,27,2,2,98,1,24,71,12,98,2,13,13,7,71,29,5,16,38,37,14,4,6,13,67,4,1,2,1,2,130,1,13,9,458,222,22,106,103,2,1,24,23,25,72,16,9,37,191,31,237,2,90,14,244,265,37,9,52,14,34,1,71,15,9,11,30,1,2,20,42,15,66,41,74,167,2,132,3,105,3,10,51,91,12,20,12,1,7,7,3,69,15,1,9,15,118,14,11,4,4,1,21,39,10,1,15,2,5,20,26,15,1,19,121,13,5,1,57,71,4,1,32,251,1,43,48,38,49,22,4,6,8,40,1,19,22,12,108,38,19,1,2,19,1,163,44,2,17,22,2,29,57,52,47,198,1,186,16,27,5,85,37,5,17,32,138,84,2,2,1,76,2,56,1,1,70,59,3,16,71,2,8,20,10,20,15,6,33,8,1,108,9,132,7,7,25,9,9,276,1,1,35,2,1,5,2,49,45,1,124,10,26,16,34,1,21,20,100,62,11,101,99,100,214,88,12,27,39,18,16,2,380,57,24,35,4,12,9,1,33,1,22,1,7,86,53,8,35,19,36,76,32,217,15,8,2,31,5,3,5,1,4,3,16,1,1,48,27,13,3,50,84,1,7,5,55,12,15,9,1,31,1,64,47,1,15,12,23,23];\n            // set the ranges\n            var x = d3.scaleLinear()\n                .domain([0, 3739.0])\n                .rangeRound([0, width]);\n            var y = d3.scaleLinear()\n                .range([height, 0]);\n            \n            // set the parameters for the histogram\n            var histogram = d3.histogram()\n                .domain(x.domain())\n                .thresholds(x.ticks(d3.timeMonth));\n            \n            // append the svg object to the body of the page\n            // append a 'group' element to 'svg'\n            // moves the 'group' element to the top left margin\n            var svg = d3.select(\"#negHistSVG\")\n                .attr(\"width\", width + margin.left + margin.right)\n                .attr(\"height\", height + margin.top + margin.bottom)\n              .append(\"g\")\n                .attr(\"transform\", \n                      \"translate(\" + margin.left + \",\" + margin.top + \")\");\n            \n            // group the data for the bars\n            var bins = histogram\n                .domain(x.domain())\n                .thresholds(nbins)(data);\n\n            // Scale the range of the data in the y domain\n            y.domain([0, d3.max(bins, function(d) { return d.length; })]);\n            \n            // append the bar rectangles to the svg element\n            var bars = svg.selectAll(\"rect\")\n              .data(bins)\n              .enter()\n           \n            bars.append(\"rect\")\n              .attr(\"class\", \"bar\")\n              .attr(\"x\", 1)\n              .attr(\"transform\", function(d) {\n            \t  return \"translate(\" + x(d.x0) + \",\" + y(d.length) + \")\"; })\n              .attr(\"width\", function(d) { return x(d.x1) - x(d.x0) -1 ; })\n              .attr(\"height\", function(d) { return height - y(d.length); })\n              .attr(\"fill\", \"steelblue\");\n             \n            bars.append(\"text\")\n                .attr(\"dy\", \".75em\")\n                .attr(\"y\", 6)\n                .attr(\"transform\", function(d) {\n            \t  return \"translate(\" + x(d.x0) + \",\" + (y(d.length) - 20) + \")\"; })\n                .attr(\"x\", (x(bins[0].x1) - x(bins[0].x0)) / 2)\n                .attr(\"text-anchor\", \"middle\")\n                .text(function(d) { return d.length != 0 ? d.length : ''; });\n            \n            // add the x Axis\n            svg.append(\"g\")\n              .attr(\"transform\", \"translate(0,\" + height + \")\")\n              .call(d3.axisBottom(x));\n            \n            // add the y Axis\n            svg.append(\"g\")\n              .call(d3.axisLeft(y));\n        }\n        if (d3 !== undefined) {\n            drawChart();\n        } else {\n            var sc = document.createElement('script');\n            sc.type = 'text/javascript';\n            sc.src = 'https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.16/d3.min.js';\n            sc.onload = drawChart;\n            sc.onerror = function(err) { alert(err); }\n            document.getElementsByTagName('head')[0].appendChild(sc);\n        }\n        \n    </script>\n    \n"}]},"apps":[],"jobName":"paragraph_1515777683567_1765695882","id":"20180112-142123_1917661365","dateCreated":"2018-01-12T14:21:23-0300","dateStarted":"2018-01-19T10:04:52-0300","dateFinished":"2018-01-19T10:04:52-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:80"},{"text":"def getSequenceLenghts(courseId: Int) = {\n    joinedLogsDF\n        .where(joinedLogsDF(\"course_id\") === courseId).select(\"time\")\n}","user":"anonymous","dateUpdated":"2018-01-12T22:06:11-0300","config":{"colWidth":6,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"getSequenceLenghts: (courseId: Int)org.apache.spark.sql.DataFrame\n"}]},"apps":[],"jobName":"paragraph_1515775365013_-1761639875","id":"20180112-134245_901248531","dateCreated":"2018-01-12T13:42:45-0300","dateStarted":"2018-01-12T22:06:03-0300","dateFinished":"2018-01-12T22:06:03-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:81"},{"text":"val timestamps = histStringData(getSequenceLenghts(1).take(1000))\nz.angularBind(\"timestamps\", \"\")","user":"anonymous","dateUpdated":"2018-01-12T22:06:16-0300","config":{"colWidth":6,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"timestamps: String = [\"2014-06-23T17:17:24Z\",\"2014-06-23T17:17:50Z\",\"2014-06-23T17:18:05Z\",\"2014-06-23T17:18:05Z\",\"2014-06-23T17:18:40Z\",\"2014-06-23T17:18:47Z\",\"2014-06-23T17:18:48Z\",\"2014-06-23T17:19:13Z\",\"2014-06-23T17:19:28Z\",\"2014-06-23T17:19:30Z\",\"2014-06-23T17:20:02Z\",\"2014-06-23T17:22:02Z\",\"2014-06-23T17:22:29Z\",\"2014-06-23T17:22:31Z\",\"2014-06-23T17:22:44Z\",\"2014-06-23T17:22:45Z\",\"2014-06-23T17:22:57Z\",\"2014-06-23T17:23:00Z\",\"2014-06-23T17:23:01Z\",\"2014-06-23T17:23:12Z\",\"2014-06-23T17:23:39Z\",\"2014-06-23T17:24:07Z\",\"2014-06-23T17:25:51Z\",\"2014-06-23T17:25:52Z\",\"2014-06-23T17:26:02Z\",\"2014-06-23T17:26:08Z\",\"2014-06-23T17:26:19Z\",\"2014-06-23T17:26:20Z\",\"2014-06-23T17:26:35Z\",\"2014-06-23T17:26:36Z\",\"2014-06-23T17:26:51Z\",\"2014-06-23T17:26:55Z\",\"2014-06-23T17:27:09Z\",\"2014-06-25T15:1..."}]},"apps":[],"jobName":"paragraph_1515778420336_197316514","id":"20180112-143340_630574616","dateCreated":"2018-01-12T14:33:40-0300","dateStarted":"2018-01-12T22:06:05-0300","dateFinished":"2018-01-12T22:06:06-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:82"},{"text":"println(s\"\"\"%angular\n    <h3>Distribution of sequence lengths wit Dropout</h3>\n    <svg id=\"timestampSVG\" width=\"200\" height=\"100\" font-family=\"sans-serif\" font-size=\"10\" text-anchor=\"middle\"></svg>\n    <script type=\"text/javascript\" src=\"https://d3js.org/d3.v4.min.js\"></script>\n    <script type=\"text/javascript\">\n        // Draw the bubble chart\n        function drawChart() {\n            // set the dimensions and margins of the graph\n            var margin = {top: 20, right: 30, bottom: 30, left: 40},\n                width = 800 - margin.left - margin.right,\n                height = 300 - margin.top - margin.bottom;\n            var nbins = 40;\n            \n            var timeData = ${timestamps}.map(function(d) { return new Date(d).getTime(); });\n            var formatTime = d3.time.format(\"%m-%d\"),\n                formatDate = function(d) { return formatTime(new Date(d)); }; \n    \n            // set the ranges\n            var x = d3.scaleLinear()\n                .domain([d3.min(timeData), d3.max(timeData)])\n                .rangeRound([0, width]);\n            var y = d3.scaleLinear()\n                .range([height, 0]);\n            \n            // append the svg object to the body of the page\n            // append a 'group' element to 'svg'\n            // moves the 'group' element to the top left margin\n            var svg = d3.select(\"#timestampSVG\")\n                .attr(\"width\", width + margin.left + margin.right)\n                .attr(\"height\", height + margin.top + margin.bottom)\n              .append(\"g\")\n                .attr(\"transform\", \n                      \"translate(\" + margin.left + \",\" + margin.top + \")\");\n            \n            // group the data for the bars\n            var bins = d3.histogram()\n                .domain(x.domain())\n                .thresholds(nbins)(timeData);\n            // Scale the range of the data in the y domain\n            y.domain([0, d3.max(bins, function(d) { return d.length; })]);\n            \n            // append the bar rectangles to the svg element\n            var bars = svg.selectAll(\"rect\")\n              .data(bins)\n              .enter()\n           \n            bars.append(\"rect\")\n              .attr(\"class\", \"bar\")\n              .attr(\"x\", 1)\n              .attr(\"transform\", function(d) {\n            \t  return \"translate(\" + x(d.x0) + \",\" + y(d.length) + \")\"; })\n              .attr(\"width\", function(d) { return x(d.x1) - x(d.x0) -1 ; })\n              .attr(\"height\", function(d) { return height - y(d.length); })\n              .attr(\"fill\", \"steelblue\");\n             \n            bars.append(\"text\")\n                .attr(\"dy\", \".75em\")\n                .attr(\"y\", 6)\n                .attr(\"transform\", function(d) {\n            \t  return \"translate(\" + x(d.x0) + \",\" + (y(d.length) - 20) + \")\"; })\n                .attr(\"x\", (x(bins[0].x1) - x(bins[0].x0)) / 2)\n                .attr(\"text-anchor\", \"middle\")\n                .text(function(d) { return d.length != 0 ? d.length : ''; });\n            \n            // add the x Axis\n            var xAxis = d3.svg.axis()\n                .scale(x)\n                .orient(\"bottom\")\n                //.tickFormat(formatDate);\n    \n            console.log(xAxis.scale())\n            svg.append(\"g\")\n                .attr(\"class\", \"x axis\")\n                .attr(\"transform\", \"translate(0,\" + height + \")\")\n                .call(xAxis);\n            \n            // add the y Axis\n            svg.append(\"g\")\n              .call(d3.axisLeft(y));\n        }\n        if (d3 !== undefined) {\n            drawChart();\n        } else {\n            var sc = document.createElement('script');\n            sc.type = 'text/javascript';\n            sc.src = 'https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.16/d3.min.js';\n            sc.onload = drawChart;\n            sc.onerror = function(err) { alert(err); }\n            document.getElementsByTagName('head')[0].appendChild(sc);\n        }\n        \n    </script>\n    \"\"\")","user":"anonymous","dateUpdated":"2018-01-12T22:28:07-0300","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"    <h3>Distribution of sequence lengths wit Dropout</h3>\n    <svg id=\"timestampSVG\" width=\"200\" height=\"100\" font-family=\"sans-serif\" font-size=\"10\" text-anchor=\"middle\"></svg>\n    <script type=\"text/javascript\" src=\"https://d3js.org/d3.v4.min.js\"></script>\n    <script type=\"text/javascript\">\n        // Draw the bubble chart\n        function drawChart() {\n            // set the dimensions and margins of the graph\n            var margin = {top: 20, right: 30, bottom: 30, left: 40},\n                width = 800 - margin.left - margin.right,\n                height = 300 - margin.top - margin.bottom;\n            var nbins = 40;\n            \n            var timeData = [\"2014-06-23T17:17:24Z\",\"2014-06-23T17:17:50Z\",\"2014-06-23T17:18:05Z\",\"2014-06-23T17:18:05Z\",\"2014-06-23T17:18:40Z\",\"2014-06-23T17:18:47Z\",\"2014-06-23T17:18:48Z\",\"2014-06-23T17:19:13Z\",\"2014-06-23T17:19:28Z\",\"2014-06-23T17:19:30Z\",\"2014-06-23T17:20:02Z\",\"2014-06-23T17:22:02Z\",\"2014-06-23T17:22:29Z\",\"2014-06-23T17:22:31Z\",\"2014-06-23T17:22:44Z\",\"2014-06-23T17:22:45Z\",\"2014-06-23T17:22:57Z\",\"2014-06-23T17:23:00Z\",\"2014-06-23T17:23:01Z\",\"2014-06-23T17:23:12Z\",\"2014-06-23T17:23:39Z\",\"2014-06-23T17:24:07Z\",\"2014-06-23T17:25:51Z\",\"2014-06-23T17:25:52Z\",\"2014-06-23T17:26:02Z\",\"2014-06-23T17:26:08Z\",\"2014-06-23T17:26:19Z\",\"2014-06-23T17:26:20Z\",\"2014-06-23T17:26:35Z\",\"2014-06-23T17:26:36Z\",\"2014-06-23T17:26:51Z\",\"2014-06-23T17:26:55Z\",\"2014-06-23T17:27:09Z\",\"2014-06-25T15:18:27Z\",\"2014-06-25T15:18:33Z\",\"2014-06-25T15:18:39Z\",\"2014-06-25T15:18:39Z\",\"2014-06-25T15:18:47Z\",\"2014-06-25T15:18:54Z\",\"2014-06-25T15:18:57Z\",\"2014-06-25T15:18:57Z\",\"2014-06-25T15:19:07Z\",\"2014-06-25T15:19:07Z\",\"2014-06-25T15:19:43Z\",\"2014-06-25T15:19:43Z\",\"2014-06-25T15:19:43Z\",\"2014-06-25T15:24:32Z\",\"2014-06-25T15:24:33Z\",\"2014-06-25T15:24:33Z\",\"2014-06-25T15:27:40Z\",\"2014-06-25T15:27:40Z\",\"2014-06-25T15:27:40Z\",\"2014-06-25T15:34:12Z\",\"2014-06-25T15:34:12Z\",\"2014-06-25T15:34:13Z\",\"2014-06-25T15:44:08Z\",\"2014-06-25T15:44:08Z\",\"2014-06-25T15:44:08Z\",\"2014-06-25T15:44:22Z\",\"2014-06-25T15:44:22Z\",\"2014-06-25T15:44:22Z\",\"2014-06-25T15:52:45Z\",\"2014-06-25T15:52:45Z\",\"2014-06-25T15:52:45Z\",\"2014-06-25T15:58:15Z\",\"2014-06-25T15:58:16Z\",\"2014-06-25T15:58:16Z\",\"2014-06-25T16:19:52Z\",\"2014-06-25T16:19:52Z\",\"2014-06-25T16:19:52Z\",\"2014-06-25T16:28:46Z\",\"2014-06-25T16:28:46Z\",\"2014-06-25T16:28:46Z\",\"2014-06-25T17:19:21Z\",\"2014-06-25T17:19:23Z\",\"2014-06-25T17:20:19Z\",\"2014-06-25T17:20:21Z\",\"2014-06-25T17:20:26Z\",\"2014-06-25T17:20:26Z\",\"2014-06-25T17:21:02Z\",\"2014-06-29T03:04:50Z\",\"2014-06-29T03:04:57Z\",\"2014-06-29T03:05:21Z\",\"2014-06-29T03:05:31Z\",\"2014-06-29T03:05:40Z\",\"2014-06-29T03:05:49Z\",\"2014-06-29T03:06:00Z\",\"2014-06-29T03:06:10Z\",\"2014-06-29T03:06:24Z\",\"2014-06-29T03:06:25Z\",\"2014-06-29T03:06:38Z\",\"2014-06-29T03:06:47Z\",\"2014-06-29T03:06:58Z\",\"2014-06-29T03:07:25Z\",\"2014-06-29T15:04:42Z\",\"2014-07-04T10:49:16Z\",\"2014-06-15T04:37:50Z\",\"2014-06-15T04:40:49Z\",\"2014-06-15T04:40:49Z\",\"2014-06-15T04:41:06Z\",\"2014-06-15T04:41:06Z\",\"2014-06-15T04:41:07Z\",\"2014-06-15T04:53:02Z\",\"2014-06-15T04:53:02Z\",\"2014-06-15T04:53:02Z\",\"2014-06-15T04:53:04Z\",\"2014-06-15T05:00:28Z\",\"2014-06-15T05:00:28Z\",\"2014-06-15T05:00:28Z\",\"2014-06-15T05:00:29Z\",\"2014-06-15T05:16:51Z\",\"2014-06-15T05:16:52Z\",\"2014-06-15T05:16:53Z\",\"2014-06-15T05:16:55Z\",\"2014-06-15T05:26:09Z\",\"2014-06-15T05:26:10Z\",\"2014-06-15T05:26:10Z\",\"2014-06-15T05:26:11Z\",\"2014-06-15T05:41:00Z\",\"2014-06-15T05:41:00Z\",\"2014-06-15T05:41:01Z\",\"2014-06-15T05:42:41Z\",\"2014-06-15T05:42:41Z\",\"2014-06-15T05:42:42Z\",\"2014-06-15T05:58:57Z\",\"2014-06-15T05:58:58Z\",\"2014-06-15T05:58:58Z\",\"2014-06-15T05:58:59Z\",\"2014-06-15T06:08:21Z\",\"2014-06-15T06:08:22Z\",\"2014-06-15T06:08:22Z\",\"2014-06-15T06:08:23Z\",\"2014-06-15T06:18:06Z\",\"2014-06-15T06:18:07Z\",\"2014-06-15T06:18:07Z\",\"2014-06-15T06:18:09Z\",\"2014-06-15T06:18:10Z\",\"2014-06-15T06:19:23Z\",\"2014-06-15T06:19:26Z\",\"2014-06-15T06:19:31Z\",\"2014-06-15T06:19:31Z\",\"2014-06-15T06:20:43Z\",\"2014-06-15T06:20:43Z\",\"2014-06-15T06:21:11Z\",\"2014-06-15T06:21:11Z\",\"2014-06-15T06:26:50Z\",\"2014-06-15T06:27:04Z\",\"2014-06-15T06:27:23Z\",\"2014-06-15T06:27:28Z\",\"2014-06-15T06:27:28Z\",\"2014-06-15T06:27:32Z\",\"2014-06-15T06:27:32Z\",\"2014-06-15T06:27:46Z\",\"2014-06-15T06:27:46Z\",\"2014-06-15T06:27:58Z\",\"2014-06-15T06:27:58Z\",\"2014-06-15T06:28:08Z\",\"2014-06-15T06:28:10Z\",\"2014-06-15T06:28:10Z\",\"2014-06-15T06:28:10Z\",\"2014-06-15T06:28:11Z\",\"2014-06-15T06:28:33Z\",\"2014-06-15T06:28:33Z\",\"2014-06-15T06:28:39Z\",\"2014-06-15T06:28:48Z\",\"2014-06-15T06:28:48Z\",\"2014-06-15T06:28:51Z\",\"2014-06-15T06:28:52Z\",\"2014-06-15T06:29:21Z\",\"2014-06-15T06:29:22Z\",\"2014-06-15T06:29:33Z\",\"2014-06-15T06:30:04Z\",\"2014-06-15T06:30:16Z\",\"2014-06-15T06:30:31Z\",\"2014-06-15T06:30:49Z\",\"2014-06-15T06:31:15Z\",\"2014-06-15T06:31:25Z\",\"2014-06-15T06:32:04Z\",\"2014-06-15T06:35:26Z\",\"2014-06-15T06:37:16Z\",\"2014-06-15T06:38:06Z\",\"2014-06-15T06:38:09Z\",\"2014-06-15T06:38:09Z\",\"2014-06-15T06:38:18Z\",\"2014-06-15T06:38:24Z\",\"2014-06-15T06:39:20Z\",\"2014-06-15T06:39:20Z\",\"2014-06-15T06:39:34Z\",\"2014-06-15T06:39:34Z\",\"2014-06-15T06:40:04Z\",\"2014-06-15T06:40:04Z\",\"2014-06-15T06:40:05Z\",\"2014-06-15T11:08:08Z\",\"2014-06-15T11:08:15Z\",\"2014-06-15T11:08:15Z\",\"2014-06-15T11:08:23Z\",\"2014-06-15T11:08:24Z\",\"2014-06-15T11:08:25Z\",\"2014-06-15T11:13:39Z\",\"2014-06-15T11:13:40Z\",\"2014-06-15T11:13:46Z\",\"2014-06-15T11:27:17Z\",\"2014-06-15T11:27:17Z\",\"2014-06-15T13:05:43Z\",\"2014-06-15T13:05:43Z\",\"2014-06-15T13:25:50Z\",\"2014-06-15T13:25:58Z\",\"2014-06-15T13:26:03Z\",\"2014-06-15T13:26:03Z\",\"2014-06-15T13:26:11Z\",\"2014-06-15T13:26:11Z\",\"2014-06-15T13:26:13Z\",\"2014-06-15T13:26:13Z\",\"2014-06-15T13:26:23Z\",\"2014-06-15T13:26:24Z\",\"2014-06-16T15:05:11Z\",\"2014-06-16T15:05:14Z\",\"2014-06-16T15:05:14Z\",\"2014-06-16T15:05:21Z\",\"2014-06-16T15:05:21Z\",\"2014-06-16T15:05:35Z\",\"2014-06-17T14:12:55Z\",\"2014-06-17T14:12:59Z\",\"2014-06-17T14:12:59Z\",\"2014-06-19T14:13:31Z\",\"2014-06-19T14:13:36Z\",\"2014-06-21T03:20:04Z\",\"2014-06-21T03:20:10Z\",\"2014-06-21T03:20:10Z\",\"2014-06-21T03:23:37Z\",\"2014-06-21T03:23:37Z\",\"2014-06-21T03:23:38Z\",\"2014-06-21T04:00:50Z\",\"2014-06-21T04:00:50Z\",\"2014-06-21T04:00:51Z\",\"2014-06-21T04:00:51Z\",\"2014-06-21T04:01:02Z\",\"2014-06-21T04:01:04Z\",\"2014-06-21T04:01:08Z\",\"2014-06-21T04:01:08Z\",\"2014-06-21T04:01:10Z\",\"2014-06-21T04:12:18Z\",\"2014-06-21T04:12:18Z\",\"2014-06-21T04:12:19Z\",\"2014-06-21T04:12:20Z\",\"2014-06-21T04:23:37Z\",\"2014-06-21T04:23:38Z\",\"2014-06-21T04:23:38Z\",\"2014-06-21T04:23:39Z\",\"2014-06-21T05:00:06Z\",\"2014-06-21T05:00:06Z\",\"2014-06-21T05:00:06Z\",\"2014-06-21T05:00:07Z\",\"2014-06-21T05:11:59Z\",\"2014-06-21T05:11:59Z\",\"2014-06-21T05:12:00Z\",\"2014-06-21T05:21:49Z\",\"2014-06-21T05:21:49Z\",\"2014-06-21T05:21:49Z\",\"2014-06-21T05:23:35Z\",\"2014-06-21T05:23:36Z\",\"2014-06-21T05:24:56Z\",\"2014-06-21T05:24:56Z\",\"2014-06-21T05:32:01Z\",\"2014-06-21T05:32:14Z\",\"2014-06-21T05:32:15Z\",\"2014-06-21T05:58:14Z\",\"2014-06-21T05:58:14Z\",\"2014-06-21T06:03:00Z\",\"2014-06-21T06:03:03Z\",\"2014-06-21T06:04:43Z\",\"2014-06-21T06:04:43Z\",\"2014-06-21T06:04:48Z\",\"2014-06-21T06:04:48Z\",\"2014-06-21T06:05:06Z\",\"2014-06-23T15:30:57Z\",\"2014-06-23T15:31:17Z\",\"2014-06-23T15:31:22Z\",\"2014-06-23T15:31:22Z\",\"2014-06-23T15:31:31Z\",\"2014-06-23T15:31:32Z\",\"2014-06-23T15:31:49Z\",\"2014-06-23T15:31:52Z\",\"2014-06-23T15:31:52Z\",\"2014-06-23T15:31:55Z\",\"2014-06-23T15:31:55Z\",\"2014-06-23T15:32:00Z\",\"2014-06-23T15:32:00Z\",\"2014-06-29T03:21:58Z\",\"2014-06-29T03:22:07Z\",\"2014-06-29T03:22:07Z\",\"2014-06-29T03:22:13Z\",\"2014-06-29T03:22:16Z\",\"2014-06-29T03:22:17Z\",\"2014-06-29T03:22:28Z\",\"2014-06-29T03:22:28Z\",\"2014-06-29T03:32:10Z\",\"2014-06-29T03:32:11Z\",\"2014-06-29T03:32:12Z\",\"2014-06-29T03:40:50Z\",\"2014-06-29T03:40:51Z\",\"2014-06-29T03:40:51Z\",\"2014-06-29T03:40:52Z\",\"2014-06-29T03:51:05Z\",\"2014-06-29T03:51:06Z\",\"2014-06-29T03:51:06Z\",\"2014-06-29T03:51:07Z\",\"2014-06-29T04:05:43Z\",\"2014-06-29T04:05:43Z\",\"2014-06-29T04:05:44Z\",\"2014-06-29T04:05:45Z\",\"2014-06-29T04:13:08Z\",\"2014-06-29T04:13:09Z\",\"2014-06-29T04:13:09Z\",\"2014-06-29T04:13:10Z\",\"2014-06-29T04:27:46Z\",\"2014-06-29T04:27:46Z\",\"2014-06-29T04:27:46Z\",\"2014-06-29T04:27:47Z\",\"2014-06-29T04:39:07Z\",\"2014-06-29T04:39:07Z\",\"2014-06-29T04:39:07Z\",\"2014-06-29T04:44:16Z\",\"2014-06-29T04:44:16Z\",\"2014-06-29T04:55:01Z\",\"2014-06-29T04:55:02Z\",\"2014-06-29T04:55:12Z\",\"2014-06-29T04:55:13Z\",\"2014-06-29T04:57:17Z\",\"2014-06-29T04:57:20Z\",\"2014-06-29T04:58:02Z\",\"2014-06-29T04:58:04Z\",\"2014-06-29T04:58:13Z\",\"2014-06-29T04:58:13Z\",\"2014-06-29T04:58:20Z\",\"2014-06-29T04:58:21Z\",\"2014-06-29T04:58:40Z\",\"2014-06-29T04:58:47Z\",\"2014-06-29T04:58:47Z\",\"2014-06-29T04:58:59Z\",\"2014-06-29T04:58:59Z\",\"2014-06-29T04:59:08Z\",\"2014-06-29T04:59:08Z\",\"2014-06-29T04:59:12Z\",\"2014-06-29T04:59:13Z\",\"2014-06-29T04:59:14Z\",\"2014-06-29T04:59:19Z\",\"2014-06-29T04:59:20Z\",\"2014-06-29T04:59:29Z\",\"2014-06-29T04:59:30Z\",\"2014-06-29T05:05:06Z\",\"2014-06-29T05:05:07Z\",\"2014-06-29T05:05:27Z\",\"2014-06-29T05:05:28Z\",\"2014-06-29T05:05:58Z\",\"2014-06-29T05:05:59Z\",\"2014-06-29T05:06:29Z\",\"2014-06-29T05:06:29Z\",\"2014-06-29T05:06:45Z\",\"2014-06-29T05:06:46Z\",\"2014-06-29T05:06:53Z\",\"2014-06-29T05:06:53Z\",\"2014-06-29T05:13:39Z\",\"2014-06-29T05:13:39Z\",\"2014-06-29T05:14:02Z\",\"2014-06-29T05:14:02Z\",\"2014-06-29T05:14:03Z\",\"2014-06-29T05:14:08Z\",\"2014-06-29T05:14:17Z\",\"2014-06-29T05:14:25Z\",\"2014-06-29T05:14:28Z\",\"2014-06-29T05:14:32Z\",\"2014-06-29T05:14:40Z\",\"2014-06-29T05:15:22Z\",\"2014-06-29T05:15:27Z\",\"2014-06-29T05:15:30Z\",\"2014-06-29T05:15:30Z\",\"2014-06-29T05:15:39Z\",\"2014-06-29T05:15:40Z\",\"2014-06-29T05:15:45Z\",\"2014-06-29T05:15:45Z\",\"2014-06-29T05:16:11Z\",\"2014-06-29T05:16:12Z\",\"2014-06-29T05:16:16Z\",\"2014-06-29T05:16:53Z\",\"2014-06-29T05:16:54Z\",\"2014-06-29T05:17:07Z\",\"2014-06-29T05:17:07Z\",\"2014-06-29T05:17:16Z\",\"2014-06-29T05:17:18Z\",\"2014-06-29T05:17:35Z\",\"2014-06-29T05:17:43Z\",\"2014-06-29T05:17:44Z\",\"2014-06-29T05:17:45Z\",\"2014-06-29T05:17:48Z\",\"2014-06-29T05:17:49Z\",\"2014-06-29T05:18:26Z\",\"2014-06-29T05:18:29Z\",\"2014-06-29T05:18:29Z\",\"2014-06-29T05:18:31Z\",\"2014-06-29T05:18:32Z\",\"2014-06-29T05:18:33Z\",\"2014-06-29T05:18:35Z\",\"2014-06-29T05:19:25Z\",\"2014-06-29T05:19:27Z\",\"2014-06-29T05:19:27Z\",\"2014-06-29T05:19:30Z\",\"2014-06-29T05:19:30Z\",\"2014-06-29T05:19:31Z\",\"2014-06-29T05:19:34Z\",\"2014-06-29T05:19:48Z\",\"2014-06-29T05:19:49Z\",\"2014-06-29T05:19:50Z\",\"2014-06-29T05:19:51Z\",\"2014-06-29T05:19:52Z\",\"2014-06-29T05:19:53Z\",\"2014-06-29T05:19:55Z\",\"2014-06-29T05:20:18Z\",\"2014-06-29T05:20:23Z\",\"2014-06-29T05:20:23Z\",\"2014-06-29T05:20:25Z\",\"2014-06-29T05:20:26Z\",\"2014-06-29T05:20:27Z\",\"2014-06-29T05:20:34Z\",\"2014-06-29T05:20:35Z\",\"2014-06-29T05:20:43Z\",\"2014-06-29T05:23:24Z\",\"2014-06-29T05:23:27Z\",\"2014-06-29T05:23:27Z\",\"2014-06-29T05:24:17Z\",\"2014-06-29T05:24:19Z\",\"2014-06-29T05:24:19Z\",\"2014-06-29T05:24:23Z\",\"2014-06-29T05:40:12Z\",\"2014-06-29T05:40:16Z\",\"2014-06-29T05:40:16Z\",\"2014-06-29T05:42:03Z\",\"2014-06-29T05:42:05Z\",\"2014-06-29T05:42:06Z\",\"2014-06-29T05:43:18Z\",\"2014-06-29T05:43:19Z\",\"2014-06-29T05:43:27Z\",\"2014-06-29T05:44:43Z\",\"2014-06-29T05:44:47Z\",\"2014-06-29T05:44:48Z\",\"2014-06-29T05:44:53Z\",\"2014-06-29T05:44:54Z\",\"2014-06-29T05:44:55Z\",\"2014-06-29T05:44:59Z\",\"2014-06-29T05:45:00Z\",\"2014-06-29T05:45:06Z\",\"2014-06-29T05:45:07Z\",\"2014-06-29T05:46:32Z\",\"2014-06-29T05:46:33Z\",\"2014-06-29T05:46:33Z\",\"2014-06-29T05:46:36Z\",\"2014-06-29T05:46:37Z\",\"2014-06-29T05:48:00Z\",\"2014-06-29T05:48:04Z\",\"2014-06-29T05:48:04Z\",\"2014-06-29T05:48:11Z\",\"2014-06-29T05:48:11Z\",\"2014-06-29T05:48:59Z\",\"2014-06-29T05:49:00Z\",\"2014-06-29T05:49:00Z\",\"2014-06-29T05:49:07Z\",\"2014-06-29T05:49:08Z\",\"2014-06-29T05:49:13Z\",\"2014-06-29T05:50:34Z\",\"2014-06-29T05:50:34Z\",\"2014-06-29T05:50:40Z\",\"2014-06-29T05:50:41Z\",\"2014-06-29T05:50:59Z\",\"2014-06-29T05:51:00Z\",\"2014-06-29T10:53:04Z\",\"2014-06-29T10:53:07Z\",\"2014-06-29T10:53:07Z\",\"2014-06-29T10:53:12Z\",\"2014-06-29T10:53:12Z\",\"2014-06-29T10:53:36Z\",\"2014-06-29T10:53:37Z\",\"2014-06-29T10:57:12Z\",\"2014-06-29T10:57:13Z\",\"2014-07-06T14:00:44Z\",\"2014-07-06T14:00:47Z\",\"2014-07-06T14:00:47Z\",\"2014-07-06T14:02:16Z\",\"2014-07-06T14:02:17Z\",\"2014-07-06T14:02:22Z\",\"2014-07-06T14:02:23Z\",\"2014-07-06T14:02:40Z\",\"2014-07-06T14:02:47Z\",\"2014-07-06T14:03:08Z\",\"2014-07-06T14:03:15Z\",\"2014-07-06T14:03:18Z\",\"2014-07-06T14:03:19Z\",\"2014-07-06T14:07:42Z\",\"2014-07-06T14:08:26Z\",\"2014-07-06T14:08:26Z\",\"2014-07-06T14:08:27Z\",\"2014-07-06T14:19:08Z\",\"2014-07-06T14:19:44Z\",\"2014-07-06T14:19:46Z\",\"2014-07-06T14:19:46Z\",\"2014-07-06T14:19:49Z\",\"2014-07-06T14:19:50Z\",\"2014-07-06T14:19:50Z\",\"2014-07-06T14:19:54Z\",\"2014-07-06T14:31:49Z\",\"2014-07-06T14:32:05Z\",\"2014-07-06T14:32:06Z\",\"2014-07-06T14:32:06Z\",\"2014-07-06T14:32:10Z\",\"2014-07-06T15:03:50Z\",\"2014-07-06T15:03:50Z\",\"2014-07-06T15:03:51Z\",\"2014-07-06T15:03:52Z\",\"2014-07-06T15:15:39Z\",\"2014-07-06T15:16:41Z\",\"2014-07-06T15:16:42Z\",\"2014-07-06T15:16:43Z\",\"2014-07-06T15:16:46Z\",\"2014-07-06T15:16:46Z\",\"2014-07-06T15:17:02Z\",\"2014-07-06T15:17:02Z\",\"2014-07-06T15:17:02Z\",\"2014-07-06T15:17:05Z\",\"2014-07-06T15:32:51Z\",\"2014-07-06T15:34:18Z\",\"2014-07-06T15:34:18Z\",\"2014-07-06T15:34:20Z\",\"2014-07-06T15:45:27Z\",\"2014-07-06T15:45:31Z\",\"2014-07-06T15:45:32Z\",\"2014-07-06T15:45:33Z\",\"2014-07-06T15:45:34Z\",\"2014-07-06T15:45:34Z\",\"2014-07-06T15:45:39Z\",\"2014-07-06T15:54:28Z\",\"2014-07-06T15:54:28Z\",\"2014-07-06T15:54:29Z\",\"2014-07-06T15:54:30Z\",\"2014-07-06T16:14:06Z\",\"2014-07-06T16:14:07Z\",\"2014-07-06T16:14:11Z\",\"2014-07-06T16:15:21Z\",\"2014-07-06T16:15:22Z\",\"2014-07-06T16:28:22Z\",\"2014-07-06T16:28:24Z\",\"2014-07-06T16:31:31Z\",\"2014-07-06T16:31:43Z\",\"2014-07-06T16:31:44Z\",\"2014-07-06T16:32:23Z\",\"2014-07-06T16:32:23Z\",\"2014-07-06T16:34:32Z\",\"2014-07-06T16:34:58Z\",\"2014-07-06T16:34:59Z\",\"2014-07-06T16:35:01Z\",\"2014-07-06T16:35:01Z\",\"2014-07-06T16:35:06Z\",\"2014-07-06T16:35:06Z\",\"2014-07-06T16:35:24Z\",\"2014-07-06T16:35:25Z\",\"2014-07-06T16:35:29Z\",\"2014-07-06T16:35:31Z\",\"2014-07-06T16:35:44Z\",\"2014-07-06T16:35:45Z\",\"2014-07-06T16:44:02Z\",\"2014-07-06T16:44:04Z\",\"2014-07-06T16:44:05Z\",\"2014-07-06T16:54:44Z\",\"2014-07-06T16:54:44Z\",\"2014-07-06T16:54:44Z\",\"2014-07-06T16:54:49Z\",\"2014-07-06T16:55:01Z\",\"2014-07-06T16:55:08Z\",\"2014-07-06T17:00:57Z\",\"2014-07-06T17:00:57Z\",\"2014-07-06T17:01:03Z\",\"2014-07-06T17:01:04Z\",\"2014-07-06T17:01:13Z\",\"2014-07-06T17:01:15Z\",\"2014-07-06T17:01:17Z\",\"2014-07-06T17:01:21Z\",\"2014-07-06T17:01:22Z\",\"2014-07-06T17:01:50Z\",\"2014-07-06T17:01:50Z\",\"2014-07-06T17:02:05Z\",\"2014-07-06T17:02:05Z\",\"2014-07-06T17:02:11Z\",\"2014-07-06T17:02:12Z\",\"2014-07-06T17:02:42Z\",\"2014-07-06T17:06:20Z\",\"2014-07-06T17:07:29Z\",\"2014-07-06T17:07:36Z\",\"2014-07-06T17:08:19Z\",\"2014-07-06T17:08:19Z\",\"2014-07-06T17:08:23Z\",\"2014-07-06T17:08:23Z\",\"2014-07-06T17:08:44Z\",\"2014-07-06T17:08:55Z\",\"2014-07-06T17:10:09Z\",\"2014-07-06T18:09:49Z\",\"2014-06-21T21:03:32Z\",\"2014-06-25T18:26:25Z\",\"2014-06-25T18:26:33Z\",\"2014-06-25T18:26:38Z\",\"2014-06-25T18:26:38Z\",\"2014-06-25T18:26:49Z\",\"2014-06-25T18:26:50Z\",\"2014-06-25T18:33:06Z\",\"2014-06-25T18:33:06Z\",\"2014-06-25T18:33:07Z\",\"2014-06-25T18:33:12Z\",\"2014-06-25T18:33:13Z\",\"2014-06-25T18:33:13Z\",\"2014-06-25T18:35:00Z\",\"2014-06-25T18:35:00Z\",\"2014-06-25T18:40:05Z\",\"2014-06-25T18:40:05Z\",\"2014-06-25T18:40:06Z\",\"2014-06-25T18:51:34Z\",\"2014-06-25T18:51:34Z\",\"2014-06-25T18:51:35Z\",\"2014-06-25T18:58:36Z\",\"2014-06-25T18:58:36Z\",\"2014-06-25T18:58:36Z\",\"2014-06-25T18:58:40Z\",\"2014-06-25T18:58:40Z\",\"2014-06-25T19:24:20Z\",\"2014-06-25T19:24:20Z\",\"2014-06-25T19:24:20Z\",\"2014-06-25T19:28:07Z\",\"2014-06-25T19:28:08Z\",\"2014-06-25T19:28:08Z\",\"2014-06-25T20:02:29Z\",\"2014-06-25T20:02:29Z\",\"2014-06-25T20:02:30Z\",\"2014-06-25T20:05:02Z\",\"2014-06-25T20:05:04Z\",\"2014-06-25T20:05:59Z\",\"2014-06-25T20:06:17Z\",\"2014-06-25T20:06:17Z\",\"2014-06-25T20:06:34Z\",\"2014-06-25T20:06:34Z\",\"2014-06-29T03:24:48Z\",\"2014-06-29T03:24:51Z\",\"2014-06-29T03:24:51Z\",\"2014-06-29T03:25:22Z\",\"2014-06-29T03:25:23Z\",\"2014-06-29T03:25:46Z\",\"2014-06-29T03:25:46Z\",\"2014-06-29T03:30:34Z\",\"2014-06-29T03:30:34Z\",\"2014-06-29T03:30:35Z\",\"2014-06-29T03:35:55Z\",\"2014-06-29T03:35:55Z\",\"2014-06-29T03:35:55Z\",\"2014-06-29T03:44:29Z\",\"2014-06-29T03:44:30Z\",\"2014-06-29T03:44:30Z\",\"2014-06-29T03:50:51Z\",\"2014-06-29T03:50:52Z\",\"2014-06-29T16:35:08Z\",\"2014-06-29T16:35:11Z\",\"2014-06-29T16:35:11Z\",\"2014-06-29T16:35:40Z\",\"2014-06-29T16:35:41Z\",\"2014-06-29T17:44:53Z\",\"2014-06-29T17:44:56Z\",\"2014-06-29T17:44:57Z\",\"2014-06-29T17:51:00Z\",\"2014-06-29T17:51:00Z\",\"2014-06-29T17:51:01Z\",\"2014-06-29T17:52:04Z\",\"2014-06-29T17:52:09Z\",\"2014-06-29T17:52:09Z\",\"2014-06-29T18:00:04Z\",\"2014-06-29T18:00:04Z\",\"2014-06-29T18:00:05Z\",\"2014-06-29T18:27:04Z\",\"2014-06-29T18:27:07Z\",\"2014-06-29T18:28:08Z\",\"2014-06-29T18:28:08Z\",\"2014-06-29T18:28:19Z\",\"2014-06-29T18:28:20Z\",\"2014-06-29T18:29:11Z\",\"2014-06-29T18:29:12Z\",\"2014-06-29T18:29:12Z\",\"2014-06-29T18:30:31Z\",\"2014-06-29T20:33:16Z\",\"2014-06-29T20:33:18Z\",\"2014-06-29T20:33:19Z\",\"2014-06-29T20:33:26Z\",\"2014-06-29T20:33:27Z\",\"2014-06-29T20:38:38Z\",\"2014-06-29T20:38:39Z\",\"2014-06-29T20:38:39Z\",\"2014-06-29T20:39:41Z\",\"2014-06-29T20:39:42Z\",\"2014-06-29T20:39:42Z\",\"2014-06-29T20:39:45Z\",\"2014-06-29T20:39:46Z\",\"2014-06-29T20:39:52Z\",\"2014-06-29T20:39:55Z\",\"2014-06-29T20:39:56Z\",\"2014-06-29T20:40:05Z\",\"2014-06-29T20:40:06Z\",\"2014-06-29T20:40:06Z\",\"2014-06-29T20:40:09Z\",\"2014-06-29T20:40:10Z\",\"2014-06-29T20:40:10Z\",\"2014-06-29T20:46:47Z\",\"2014-06-29T20:46:47Z\",\"2014-06-29T20:46:48Z\",\"2014-06-29T20:46:51Z\",\"2014-06-29T20:46:52Z\",\"2014-06-29T20:46:52Z\",\"2014-06-29T20:46:55Z\",\"2014-06-29T20:47:30Z\",\"2014-06-29T20:47:30Z\",\"2014-06-29T20:49:36Z\",\"2014-06-29T20:49:59Z\",\"2014-06-29T20:49:59Z\",\"2014-06-29T20:50:01Z\",\"2014-06-29T20:50:01Z\",\"2014-06-29T20:50:39Z\",\"2014-06-29T20:50:39Z\",\"2014-06-29T20:53:09Z\",\"2014-06-29T20:53:12Z\",\"2014-06-29T20:53:12Z\",\"2014-06-29T20:53:13Z\",\"2014-06-29T20:53:16Z\",\"2014-06-29T20:54:00Z\",\"2014-06-29T20:54:00Z\",\"2014-06-29T21:02:16Z\",\"2014-06-29T21:03:16Z\",\"2014-06-29T21:03:16Z\",\"2014-06-29T21:03:18Z\",\"2014-06-29T21:03:18Z\",\"2014-06-29T21:03:30Z\",\"2014-06-29T21:03:30Z\",\"2014-06-29T21:03:30Z\",\"2014-06-29T21:03:32Z\",\"2014-06-29T21:03:44Z\",\"2014-06-29T21:03:44Z\",\"2014-06-29T21:15:51Z\",\"2014-06-29T21:15:57Z\",\"2014-06-29T21:15:57Z\",\"2014-06-29T21:22:32Z\",\"2014-06-29T21:22:42Z\",\"2014-06-29T21:22:42Z\",\"2014-06-29T21:22:46Z\",\"2014-06-29T21:22:47Z\",\"2014-06-29T21:22:50Z\",\"2014-06-29T21:22:50Z\",\"2014-06-29T21:22:51Z\",\"2014-06-29T21:22:53Z\",\"2014-06-29T21:23:35Z\",\"2014-06-29T21:23:35Z\",\"2014-06-29T21:33:23Z\",\"2014-06-29T21:33:42Z\",\"2014-06-29T21:33:42Z\",\"2014-06-29T21:33:58Z\",\"2014-06-29T21:33:58Z\",\"2014-06-29T21:33:58Z\",\"2014-06-29T21:40:38Z\",\"2014-06-29T21:40:38Z\",\"2014-06-29T21:40:39Z\",\"2014-06-29T21:47:47Z\",\"2014-06-29T21:48:05Z\",\"2014-06-29T21:50:06Z\",\"2014-06-29T21:50:12Z\",\"2014-06-29T21:50:12Z\",\"2014-06-29T21:50:40Z\",\"2014-06-29T21:50:40Z\",\"2014-06-29T21:50:56Z\",\"2014-06-29T21:50:56Z\",\"2014-06-29T21:51:22Z\",\"2014-06-29T22:13:41Z\",\"2014-06-29T22:14:00Z\",\"2014-06-29T22:14:01Z\",\"2014-06-29T22:14:18Z\",\"2014-06-29T22:14:21Z\",\"2014-06-29T22:14:27Z\",\"2014-06-29T22:14:28Z\",\"2014-06-29T22:14:46Z\",\"2014-06-29T22:14:46Z\",\"2014-06-29T22:16:35Z\",\"2014-06-29T22:16:36Z\",\"2014-06-29T22:16:39Z\",\"2014-06-29T22:18:34Z\",\"2014-06-29T22:18:35Z\",\"2014-06-29T22:18:39Z\",\"2014-06-29T22:18:39Z\",\"2014-06-30T19:50:30Z\",\"2014-06-30T19:50:33Z\",\"2014-06-30T19:50:33Z\",\"2014-06-30T19:50:59Z\",\"2014-06-30T19:51:00Z\",\"2014-06-30T19:51:43Z\",\"2014-06-30T22:03:28Z\",\"2014-06-30T22:03:31Z\",\"2014-06-30T22:03:33Z\",\"2014-06-30T22:03:56Z\",\"2014-07-01T11:40:12Z\",\"2014-07-01T11:40:16Z\",\"2014-07-01T11:40:16Z\",\"2014-07-01T21:55:10Z\",\"2014-07-01T21:55:13Z\",\"2014-07-01T21:55:13Z\",\"2014-07-01T21:58:57Z\",\"2014-07-04T00:09:37Z\",\"2014-07-04T00:09:40Z\",\"2014-07-04T00:09:40Z\",\"2014-07-04T00:10:05Z\",\"2014-07-04T00:10:06Z\",\"2014-07-04T00:10:13Z\",\"2014-07-04T00:10:14Z\",\"2014-07-04T00:10:14Z\",\"2014-07-04T00:10:38Z\",\"2014-07-06T10:01:22Z\",\"2014-07-06T10:01:25Z\",\"2014-07-06T10:01:25Z\",\"2014-07-06T10:04:48Z\",\"2014-07-08T06:50:30Z\",\"2014-07-08T06:50:33Z\",\"2014-07-08T06:50:40Z\",\"2014-07-08T06:50:41Z\",\"2014-07-08T06:50:58Z\",\"2014-07-08T06:50:59Z\",\"2014-07-08T07:21:06Z\",\"2014-07-08T07:21:11Z\",\"2014-07-08T07:21:12Z\",\"2014-07-08T07:23:29Z\",\"2014-07-08T07:23:30Z\",\"2014-07-08T07:23:31Z\",\"2014-07-08T07:26:11Z\",\"2014-07-08T07:26:11Z\",\"2014-07-08T07:26:12Z\",\"2014-07-08T07:26:15Z\",\"2014-07-08T07:26:16Z\",\"2014-07-08T07:26:16Z\",\"2014-07-08T07:26:18Z\",\"2014-07-08T07:27:09Z\",\"2014-07-08T07:27:10Z\",\"2014-07-08T07:27:14Z\",\"2014-07-08T07:27:15Z\",\"2014-07-08T07:27:15Z\",\"2014-07-08T07:27:17Z\",\"2014-07-08T07:27:32Z\",\"2014-07-08T07:27:33Z\",\"2014-07-08T07:35:28Z\",\"2014-07-08T07:35:40Z\",\"2014-07-08T07:35:41Z\",\"2014-07-08T07:35:43Z\",\"2014-07-08T07:35:43Z\",\"2014-07-08T07:35:43Z\",\"2014-07-08T07:35:47Z\",\"2014-07-08T07:36:00Z\",\"2014-07-08T07:36:00Z\",\"2014-07-08T07:44:18Z\",\"2014-07-08T07:44:52Z\",\"2014-07-08T07:44:53Z\",\"2014-07-08T07:44:55Z\",\"2014-07-08T07:44:55Z\",\"2014-07-08T07:45:06Z\",\"2014-07-08T07:45:07Z\",\"2014-07-08T07:45:08Z\",\"2014-07-08T07:45:09Z\",\"2014-07-08T07:45:14Z\",\"2014-07-08T07:45:14Z\",\"2014-07-08T08:25:00Z\",\"2014-07-08T08:25:00Z\",\"2014-07-08T08:25:00Z\",\"2014-07-08T08:25:07Z\",\"2014-07-08T08:25:07Z\",\"2014-07-08T08:25:12Z\",\"2014-07-08T08:25:12Z\",\"2014-07-08T08:25:15Z\",\"2014-07-08T08:52:23Z\",\"2014-07-08T08:52:23Z\",\"2014-07-08T08:52:23Z\",\"2014-07-08T08:52:26Z\",\"2014-07-08T08:52:52Z\",\"2014-07-08T08:52:52Z\",\"2014-07-08T08:52:58Z\",\"2014-07-08T08:52:58Z\",\"2014-07-08T09:01:55Z\",\"2014-07-08T09:01:55Z\",\"2014-07-08T09:01:56Z\",\"2014-07-08T09:11:15Z\",\"2014-07-08T09:11:15Z\",\"2014-07-08T09:11:16Z\",\"2014-07-08T09:20:16Z\",\"2014-07-08T09:20:17Z\",\"2014-07-08T09:20:17Z\",\"2014-07-08T09:24:29Z\",\"2014-07-08T09:30:50Z\",\"2014-07-08T09:31:30Z\",\"2014-07-08T09:33:33Z\",\"2014-07-08T09:33:42Z\",\"2014-07-08T09:39:25Z\",\"2014-07-08T09:39:26Z\",\"2014-07-08T09:39:28Z\",\"2014-07-08T09:39:28Z\",\"2014-07-08T09:39:36Z\",\"2014-07-08T09:39:43Z\",\"2014-07-08T09:39:50Z\",\"2014-07-08T09:39:50Z\",\"2014-07-08T09:39:53Z\",\"2014-07-08T09:40:31Z\",\"2014-07-08T09:40:31Z\",\"2014-07-08T09:40:37Z\",\"2014-07-08T09:40:38Z\",\"2014-07-08T09:40:57Z\",\"2014-07-08T09:40:57Z\",\"2014-07-11T10:29:26Z\",\"2014-07-11T10:29:28Z\",\"2014-07-11T10:29:28Z\",\"2014-07-11T10:30:09Z\",\"2014-07-11T10:30:10Z\",\"2014-07-11T10:30:34Z\",\"2014-07-11T10:34:16Z\",\"2014-07-11T10:34:17Z\",\"2014-07-11T10:34:31Z\",\"2014-07-11T10:34:32Z\",\"2014-07-11T10:36:10Z\",\"2014-07-11T10:36:10Z\",\"2014-06-29T03:51:59Z\",\"2014-06-29T03:55:16Z\",\"2014-06-29T03:55:20Z\",\"2014-06-29T03:55:21Z\",\"2014-06-29T03:55:37Z\",\"2014-06-29T04:05:16Z\",\"2014-06-29T04:08:32Z\",\"2014-06-29T04:08:33Z\",\"2014-06-29T04:08:37Z\",\"2014-06-29T04:10:24Z\",\"2014-06-29T04:13:10Z\",\"2014-06-29T04:15:55Z\",\"2014-06-29T04:16:05Z\",\"2014-06-29T04:25:27Z\",\"2014-06-29T04:25:27Z\",\"2014-06-29T04:25:43Z\",\"2014-06-29T04:26:54Z\",\"2014-06-29T04:26:56Z\",\"2014-06-29T04:26:56Z\",\"2014-06-29T04:27:02Z\",\"2014-06-29T04:27:58Z\",\"2014-06-29T04:27:58Z\",\"2014-06-22T06:42:34Z\",\"2014-06-29T03:56:28Z\",\"2014-06-29T04:22:11Z\",\"2014-06-29T04:23:53Z\",\"2014-06-29T04:24:02Z\",\"2014-06-29T04:24:02Z\",\"2014-06-29T04:24:17Z\",\"2014-06-29T04:24:18Z\",\"2014-06-29T04:24:23Z\",\"2014-06-29T04:24:39Z\",\"2014-06-29T04:24:54Z\",\"2014-06-29T04:25:04Z\",\"2014-06-29T04:25:55Z\",\"2014-06-29T04:26:23Z\",\"2014-06-29T04:26:28Z\",\"2014-06-29T04:51:08Z\",\"2014-06-29T04:51:36Z\",\"2014-06-12T08:16:14Z\",\"2014-06-12T08:17:10Z\",\"2014-06-12T08:17:34Z\",\"2014-06-13T03:56:41Z\",\"2014-06-13T03:57:58Z\",\"2014-06-13T03:58:09Z\",\"2014-06-13T03:58:10Z\",\"2014-06-13T03:58:27Z\",\"2014-06-13T03:58:30Z\",\"2014-06-13T03:58:39Z\",\"2014-06-13T03:58:39Z\",\"2014-06-13T03:58:46Z\",\"2014-06-13T03:58:53Z\",\"2014-06-13T03:58:56Z\",\"2014-06-13T03:58:59Z\",\"2014-06-13T03:59:02Z\",\"2014-06-13T03:59:12Z\",\"2014-06-13T03:59:12Z\",\"2014-06-13T03:59:23Z\",\"2014-06-13T03:59:24Z\",\"2014-06-13T03:59:28Z\",\"2014-06-13T03:59:29Z\",\"2014-06-13T03:59:33Z\",\"2014-06-13T03:59:36Z\",\"2014-06-13T03:59:36Z\",\"2014-06-13T03:59:51Z\",\"2014-06-13T03:59:51Z\",\"2014-06-13T04:00:37Z\",\"2014-06-13T04:01:06Z\",\"2014-06-13T04:01:06Z\",\"2014-06-13T04:01:07Z\",\"2014-06-13T04:01:11Z\"].map(function(d) { return new Date(d).getTime(); });\n            var formatTime = d3.time.format(\"%m-%d\"),\n                formatDate = function(d) { return formatTime(new Date(d)); }; \n    \n            // set the ranges\n            var x = d3.scaleLinear()\n                .domain([d3.min(timeData), d3.max(timeData)])\n                .rangeRound([0, width]);\n            var y = d3.scaleLinear()\n                .range([height, 0]);\n            \n            // append the svg object to the body of the page\n            // append a 'group' element to 'svg'\n            // moves the 'group' element to the top left margin\n            var svg = d3.select(\"#timestampSVG\")\n                .attr(\"width\", width + margin.left + margin.right)\n                .attr(\"height\", height + margin.top + margin.bottom)\n              .append(\"g\")\n                .attr(\"transform\", \n                      \"translate(\" + margin.left + \",\" + margin.top + \")\");\n            \n            // group the data for the bars\n            var bins = d3.histogram()\n                .domain(x.domain())\n                .thresholds(nbins)(timeData);\n            // Scale the range of the data in the y domain\n            y.domain([0, d3.max(bins, function(d) { return d.length; })]);\n            \n            // append the bar rectangles to the svg element\n            var bars = svg.selectAll(\"rect\")\n              .data(bins)\n              .enter()\n           \n            bars.append(\"rect\")\n              .attr(\"class\", \"bar\")\n              .attr(\"x\", 1)\n              .attr(\"transform\", function(d) {\n            \t  return \"translate(\" + x(d.x0) + \",\" + y(d.length) + \")\"; })\n              .attr(\"width\", function(d) { return x(d.x1) - x(d.x0) -1 ; })\n              .attr(\"height\", function(d) { return height - y(d.length); })\n              .attr(\"fill\", \"steelblue\");\n             \n            bars.append(\"text\")\n                .attr(\"dy\", \".75em\")\n                .attr(\"y\", 6)\n                .attr(\"transform\", function(d) {\n            \t  return \"translate(\" + x(d.x0) + \",\" + (y(d.length) - 20) + \")\"; })\n                .attr(\"x\", (x(bins[0].x1) - x(bins[0].x0)) / 2)\n                .attr(\"text-anchor\", \"middle\")\n                .text(function(d) { return d.length != 0 ? d.length : ''; });\n            \n            // add the x Axis\n            var xAxis = d3.svg.axis()\n                .scale(x)\n                .orient(\"bottom\")\n                //.tickFormat(formatDate);\n    \n            console.log(xAxis.scale())\n            svg.append(\"g\")\n                .attr(\"class\", \"x axis\")\n                .attr(\"transform\", \"translate(0,\" + height + \")\")\n                .call(xAxis);\n            \n            // add the y Axis\n            svg.append(\"g\")\n              .call(d3.axisLeft(y));\n        }\n        if (d3 !== undefined) {\n            drawChart();\n        } else {\n            var sc = document.createElement('script');\n            sc.type = 'text/javascript';\n            sc.src = 'https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.16/d3.min.js';\n            sc.onload = drawChart;\n            sc.onerror = function(err) { alert(err); }\n            document.getElementsByTagName('head')[0].appendChild(sc);\n        }\n        \n    </script>\n    \n"}]},"apps":[],"jobName":"paragraph_1515779209874_-253878454","id":"20180112-144649_1753924936","dateCreated":"2018-01-12T14:46:49-0300","dateStarted":"2018-01-12T22:28:07-0300","dateFinished":"2018-01-12T22:28:08-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:83"},{"text":"%md\n# Divide data in weeks","user":"anonymous","dateUpdated":"2018-01-12T22:23:23-0300","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Divide data in weeks</h1>\n</div>"}]},"apps":[],"jobName":"paragraph_1515792296112_2001293106","id":"20180112-182456_172964023","dateCreated":"2018-01-12T18:24:56-0300","dateStarted":"2018-01-12T22:23:23-0300","dateFinished":"2018-01-12T22:23:24-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:84"},{"text":"joinedLogsDF.where(\"course_id == 11\").orderBy(\"time\").show()","user":"anonymous","dateUpdated":"2018-01-12T22:42:08-0300","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------------+--------------------+-------+----------+------+--------------------+---------+-------+\n|enrollment_id|                time| source|     event|object|            username|course_id|dropout|\n+-------------+--------------------+-------+----------+------+--------------------+---------+-------+\n|       142574|2013-12-11 00:00:...| server|  navigate|5887.0|O5yE35etOfpaMEJAO...|     11.0|      1|\n|       142576|2013-12-11 00:08:...| server|  navigate|5887.0|rfWnSBHvE8yh3Tywx...|     11.0|      1|\n|       142578|2013-12-11 00:10:...| server|  navigate|5887.0|PmtrviA6hBub1PH85...|     11.0|      1|\n|       142582|2013-12-11 00:12:...| server|  navigate|5887.0|uFAwXIcuVZUrzooQS...|     11.0|      0|\n|       142586|2013-12-11 00:19:...| server|  navigate|5887.0|j7bASIUMnf4CT11rR...|     11.0|      0|\n|         3331|2013-12-11 00:20:...| server|  navigate|5887.0|layckrYedWZgFw7et...|     11.0|      0|\n|         3166|2013-12-11 00:31:...| server|  navigate|5887.0|OPlk4et0QDh8unILE...|     11.0|      0|\n|         2980|2013-12-11 00:37:...| server|  navigate|5887.0|6PLuywzEAD5lv83Yk...|     11.0|      1|\n|       142593|2013-12-11 00:40:...| server|  navigate|5887.0|BaZtBX3UXp9aB7tEo...|     11.0|      1|\n|         1967|2013-12-11 00:41:...| server|    access|5829.0|viuKt4GgrX0rYL5Ep...|     11.0|      0|\n|         1967|2013-12-11 00:41:...| server|    access|4721.0|viuKt4GgrX0rYL5Ep...|     11.0|      0|\n|         1967|2013-12-11 00:42:...| server|    access|4558.0|viuKt4GgrX0rYL5Ep...|     11.0|      0|\n|         1967|2013-12-11 00:42:...|browser|page_close|5829.0|viuKt4GgrX0rYL5Ep...|     11.0|      0|\n|         1967|2013-12-11 00:43:...|browser|     video|4045.0|viuKt4GgrX0rYL5Ep...|     11.0|      0|\n|         1967|2013-12-11 00:43:...| server|    access|2520.0|viuKt4GgrX0rYL5Ep...|     11.0|      0|\n|         1967|2013-12-11 00:43:...|browser|page_close|5829.0|viuKt4GgrX0rYL5Ep...|     11.0|      0|\n|         1967|2013-12-11 00:43:...|browser|    access|2520.0|viuKt4GgrX0rYL5Ep...|     11.0|      0|\n|         1967|2013-12-11 00:43:...| server|    access|2187.0|viuKt4GgrX0rYL5Ep...|     11.0|      0|\n|         1967|2013-12-11 00:43:...|browser|page_close|5829.0|viuKt4GgrX0rYL5Ep...|     11.0|      0|\n|         1967|2013-12-11 00:44:...|browser|     video|4707.0|viuKt4GgrX0rYL5Ep...|     11.0|      0|\n+-------------+--------------------+-------+----------+------+--------------------+---------+-------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1515806572965_1871510878","id":"20180112-222252_1613207818","dateCreated":"2018-01-12T22:22:52-0300","dateStarted":"2018-01-12T22:42:08-0300","dateFinished":"2018-01-12T22:42:09-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:85"},{"text":"joinedLogsDF.where(\"course_id == 11\").agg(min(\"time\")).show()","user":"anonymous","dateUpdated":"2018-01-12T22:42:18-0300","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+\n|           min(time)|\n+--------------------+\n|2013-12-11 00:00:...|\n+--------------------+\n\n"}]},"apps":[],"jobName":"paragraph_1515806683547_-1073971815","id":"20180112-222443_635296850","dateCreated":"2018-01-12T22:24:43-0300","dateStarted":"2018-01-12T22:42:18-0300","dateFinished":"2018-01-12T22:42:18-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:86"},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1515807229764_830719654","id":"20180112-223349_1645912719","dateCreated":"2018-01-12T22:33:49-0300","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:87"}],"name":"KDDCup 2015 Exploration","id":"2CZR36U88","angularObjects":{"2CY1V66FH:shared_process":[],"2CUXM7W1H:shared_process":[],"2CUJVXDNZ:shared_process":[],"2CVPZ4W2G:shared_process":[],"2CW3JC3CR:shared_process":[],"2CWT5WUCQ:shared_process":[],"2CW6D4VRM:shared_process":[],"2CUMDWYJ6:shared_process":[],"2CUUXEW9P:shared_process":[],"2CYB6F8XS:shared_process":[],"2CV7AV6ZV:shared_process":[],"2CX2JXRME:shared_process":[],"2CXN99ACT:shared_process":[],"2CWQNEUPE:shared_process":[],"2CUYD59CN:shared_process":[],"2CVG5D8B6:shared_process":[],"2CUD9P4MP:shared_process":[],"2CWJ8555A:shared_process":[],"2CVB94AAS:shared_process":[{"name":"data","object":"","noteId":"2CZR36U88"},{"name":"timestamps","object":"","noteId":"2CZR36U88"},{"name":"course","object":"6","noteId":"2CZR36U88"},{"name":"Run","object":23,"noteId":"2CZR36U88"}]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}